{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"advanced/","text":"Advanced Options \u00b6 The default values for the various parameters as well as the inclusion of some variables over others in the general MMPBSA.py input file were chosen to cover the majority of all MM/PB(GB)SA calculations that would be attempted while maintaining maximum simplicity. However, there are situations in which MMPBSA.py may appear to be restrictive and ill-equipped to address. Attempts were made to maintain the simplicity described above while easily providing users with the ability to modify most aspects of the calculation easily and without editing the source code. -make-mdins This flag will create all of the mdin and input files used by sander and nmode so that additional control can be granted to the user beyond the variables detailed in the input file section above. The files created are _GMXMMPBSA_gb.mdin which controls GB calculation; _GMXMMPBSA_pb.mdin which controls the PB calculation; _GMXMMPBSA_sander_nm_min.mdin which controls the sander minimization of snapshots to be prepared for nmode calculations; and _GMXMMPBSA_nmode.in which controls the nmode calculation. If no input file is specified, all files above are created with default values, and _GMXMMPBSA_pb.mdin is created for AmberTools\u2019s pbsa. If you wish to create a file for sander.APBS , you must include an input file with sander_apbs=1 specified to generate the desired input file. Note that if an input file is specified, only those mdin files pertinent to the calculation described therein will be created! -use-mdins This flag will prevent MMPBSA.py from creating the input files that control the various calculations (_GMXMMPBSA_gb.mdin, _GMXMMPBSA_pb.mdin, _GMXMMPBSA_sander_nm_min.mdin, and _GMXMMPBSA_nmode.in). It will instead attempt to use existing input files (though they must have those names above!) in their place. In this way, the user has full control over the calculations performed, however care must be taken. The mdin files created by MMPBSA.py have been tested and are (generally) known to be consistent. Modifying certain variables (such as imin=5 ) may prevent the script from working, so this should only be done with care. It is recommended that users start with the existing mdin files (generated by the -make-mdins flag above), and add and/or modify parameters from there. Note -make-mdins and -use-mdins are intended to give added flexibility to user input. If the MM/PBSA input file does not expose a variable you require, you may use the -make-mdins flag to generate the MDIN files and then quit. Then, edit those MDIN files, changing the variables you need to, then running gmx_MMPBSA with -use-mdins to use those modified files. QM/MMGBSA There are a lot of options for QM/MM calculations in sander, but not all of those options were made available via options in the MMPBSA.py input file. In order to take advantage of these other options, you\u2019ll have to make use of the -make-mdins and -use-mdins flags as detailed above and change the resulting _GMXMMPBSA_gb_qmmm_com/rec/lig.mdin files to fit your desired calculation. Additionally, MMPBSA.py suffers all shortcomings of sander, one of those being that PB and QM/MM are incompatible. Therefore, only QM/MMGBSA is a valid option right now.","title":"Advanced Options"},{"location":"advanced/#advanced-options","text":"The default values for the various parameters as well as the inclusion of some variables over others in the general MMPBSA.py input file were chosen to cover the majority of all MM/PB(GB)SA calculations that would be attempted while maintaining maximum simplicity. However, there are situations in which MMPBSA.py may appear to be restrictive and ill-equipped to address. Attempts were made to maintain the simplicity described above while easily providing users with the ability to modify most aspects of the calculation easily and without editing the source code. -make-mdins This flag will create all of the mdin and input files used by sander and nmode so that additional control can be granted to the user beyond the variables detailed in the input file section above. The files created are _GMXMMPBSA_gb.mdin which controls GB calculation; _GMXMMPBSA_pb.mdin which controls the PB calculation; _GMXMMPBSA_sander_nm_min.mdin which controls the sander minimization of snapshots to be prepared for nmode calculations; and _GMXMMPBSA_nmode.in which controls the nmode calculation. If no input file is specified, all files above are created with default values, and _GMXMMPBSA_pb.mdin is created for AmberTools\u2019s pbsa. If you wish to create a file for sander.APBS , you must include an input file with sander_apbs=1 specified to generate the desired input file. Note that if an input file is specified, only those mdin files pertinent to the calculation described therein will be created! -use-mdins This flag will prevent MMPBSA.py from creating the input files that control the various calculations (_GMXMMPBSA_gb.mdin, _GMXMMPBSA_pb.mdin, _GMXMMPBSA_sander_nm_min.mdin, and _GMXMMPBSA_nmode.in). It will instead attempt to use existing input files (though they must have those names above!) in their place. In this way, the user has full control over the calculations performed, however care must be taken. The mdin files created by MMPBSA.py have been tested and are (generally) known to be consistent. Modifying certain variables (such as imin=5 ) may prevent the script from working, so this should only be done with care. It is recommended that users start with the existing mdin files (generated by the -make-mdins flag above), and add and/or modify parameters from there. Note -make-mdins and -use-mdins are intended to give added flexibility to user input. If the MM/PBSA input file does not expose a variable you require, you may use the -make-mdins flag to generate the MDIN files and then quit. Then, edit those MDIN files, changing the variables you need to, then running gmx_MMPBSA with -use-mdins to use those modified files. QM/MMGBSA There are a lot of options for QM/MM calculations in sander, but not all of those options were made available via options in the MMPBSA.py input file. In order to take advantage of these other options, you\u2019ll have to make use of the -make-mdins and -use-mdins flags as detailed above and change the resulting _GMXMMPBSA_gb_qmmm_com/rec/lig.mdin files to fit your desired calculation. Additionally, MMPBSA.py suffers all shortcomings of sander, one of those being that PB and QM/MM are incompatible. Therefore, only QM/MMGBSA is a valid option right now.","title":"Advanced Options"},{"location":"analyzer/","text":"gmx_MMPBSA_ana \u00b6 Coming soon!!!","title":"gmx_MMPBSA_ana"},{"location":"analyzer/#gmx_mmpbsa_ana","text":"Coming soon!!!","title":"gmx_MMPBSA_ana"},{"location":"api/","text":"Python API \u00b6 The aim of the gmx_MMPBSA API is to provide you with direct access to the raw data produced during a gmx_MMPBSA calculation. By default, gmx_MMPBSA calculates an average, standard deviation, and standard error of the mean for all the generated data sets, but it does not support custom analyses. The API reads an _GMXMMPBSA_info file, from which it will determine what kind of calculation was performed, then automatically parse the output files and load the data into arrays. Warning The topology files you used in the gmx_MMPBSA calculation must also be available in the location specified in the _GMXMMPBSA_info file. Using the API \u00b6 We have derived a new API to reorganize the data so that it is arranged more hierarchically. This makes easier to transform the data into graphs in the gmx_MMPBSA_ana . The original and the current API only differ in the name of the callable function, the disposition of the data in Per-wise decomposition analysis and in the new 'delta' key. If you want to use the original, see the Amber manual The function load_gmxmmpbsa_info takes the name of a gmx_MMPBSA info file (typically _GMXMMPBSA_info) and returns a populated mmpbsa_data instance with all the parsed data. An example code snippet that creates a mmpbsa_data instance from the information in _GMXMMPBSA_info is shown below. from GMXMMPBSA import API as gmxMMPBSAapi data = gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA_info\" ) Properties of mmpbsa_data \u00b6 The mmpbsa_data class is a nested dictionary structure ( mmpbsa_data is actually derived from dict ). The various attributes of mmpbsa_data are described below followed by the defined operators. Attributes \u00b6 If the numpy package is installed and available, all data arrays will be numpy.ndarray instances. Otherwise, all data arrays will be array.array instances with the \u2019d\u2019 data type specifier (for a double precision float). The data is organized in an mmpbsa_data instance in the following manner: mmpbsa_data_instance [ calc_key ][ system_component ][ energy_term ] In this example, calc_key is a dict key that is paired to another dict ( mmpbsa_data_instance is the first-level dict , in this case) (Table 2). The keys of these second-level dict instances ( system_component ) pair to another dict (Table 3). Table 2. List and description of calc_key dict keys that may be present in instances of the mmpbsa_data class. Dictionary Key (calc_key) Calculation Type gb Generalized Born Results pb Poisson-Boltzmann Results rism gf Gaussian Fluctuation 3D-RISM Results rism std Standard 3D-RISM Results nmode Normal Mode Analysis Results qh Quasi-harmonic Approximation Results Table 3. List and description of system_component keys that may be present in instances of the mmpbsa_data class. Dictionary Key (system_component) Description complex Data sets for the complex. (Stability & Binding) receptor Data sets for the receptor. (Binding only) ligand Data sets for the ligand. (Binding only) delta Data sets for the delta. (Binding only) The keys of these inner-most (third-level) dict instances are paired with the data arrays for that energy term (Table 4). The various dictionary keys are listed below for each level. If alanine scanning was performed, the mmpbsa_data_instance also has a \"mutant\" attribute that contains the same dictionary structure as mmpbsa_data does for the normal system. If not, the mutant attribute is None. The only difference is that the data is accessed as follows: mmpbsa_data_instance . mutant [ calc_key ][ system_component ][ energy_term ] Warning All keys are case-sensitive, and if a space appears in the key, it must be present in your program. Also, if polar/non-polar decomposition is not performed for 3D-RISM , then the POLAR SOLV and APOLAR SOLV keys are replaced with the single key ERISM Table 4. List and description of energy_term keys that may be present in instances of the mmpbsa_data class. The allowed values of energy_term depend on the value of calc_key above in Table 2. The energy_term keys are listed for each calc_key enumerated above, accompanied by a description. The RISM keys are the same for both rism gf and rism std although the value of POLAR SOLV and APOLAR SOLV will differ depending on the method chosen. Those keys marked with * are specific to the CHARMM force field used through chamber. Those arrays are all 0 for normal Amber topology files. Description gb pb RISM Bond energy BOND BOND BOND Angle energy ANGLE ANGLE ANGLE Dihedral Energy DIHED DIHED DIHED Urey-Bradley* UB UB \u2014 Improper Dihedrals* IMP IMP \u2014 Correction Map* CMAP CMAP \u2014 1-4 van der Waals energy 1-4 VDW 1-4 VDW 1-4 VDW 1-4 Electrostatic energy 1-4 EEL 1-4 EEL 1-4 EEL van der Waals energy VDWAALS VDWAALS VDWAALS Electrostatic energy EEL EEL EEL Polar solvation energy EGB EPB POLAR SOLV Non-polar solvation energy ESURF ENPOLAR APOLAR SOLV Total solvation free energy G solv G solv G solv Total gas phase free energy G gas G gas G gas Total energy TOTAL TOTAL TOTAL Table 5. Same as Table 4 for the entropy data. Description nmode qh Translational entropy Translational Translational Rotational entropy Rotational Rotational Vibrational entropy Vibrational Vibrational Total entropy Total Total Defined operators \u00b6 In-place addition: It extends all of the arrays that are common to both mmpbsa_data instances. This is useful if, for instance, you run two gmx_MMPBSA calculations, and you use -prefix for the second simulation. Assuming that is _GMXMMPBSA2_ for the second gmx_MMPBSA calculation, the following pseudo-code will generate an mmpbsa_data instance with all of the data in concatenated arrays. The pseudo-code assumes GMXMMPBSA.API was imported as demonstrated below. data = gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA_info\" ) data += gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA2_info\" ) Example API Usage \u00b6 In many cases, the autocorrelation function of the energy can aid in the analysis of MM/PBSA data, since it provides a way of determining the statistical independence of your data points. For example, 1000 correlated snapshots provide less information, and therefore less statistical certainty, than 1000 uncorrelated snapshots. The standard error of the mean calculation performed by gmx_MMPBSA assumes a completely uncorrelated set of snapshots, which means that it is a lower bound of the true standard error of the mean, and a plot of the autocorrelation function may help determine the actual value. The example program below will calculate the autocorrelation function of the total energy (complex only for both the normal and alanine mutant systems) from a GB calculation and plot the resulting code using matplotlib. import os import sys # append AMBERHOME/bin to sys.path sys . path . append ( os . path . join ( os . getenv ( 'AMBERHOME' ), 'bin' )) # Now import the MMPBSA API from GMXMMPBSA import API as gmxMMPBSAapi import matplotlib.pyplot as plt import numpy as np data = gmxMMPBSAapi . load_gmxmmpbsa_info ( '_GMXMMPBSA_info' ) total = data [ 'gb' ][ 'complex' ][ 'TOTAL' ] . copy () data = gmxMMPBSAapi . load_gmxmmpbsa_info ( '_GMXMMPBSA_info' ) total_mut = data . mutant [ 'gb' ][ 'complex' ][ 'TOTAL' ] . copy () # Create a second copy of the data set. The np.correlate function does not # normalize the correlation function, so we modify total and total2 to get # that effect total -= total . mean () total /= total . std () total2 = total . copy () / len ( total ) acor = np . correlate ( total , total2 , 'full' ) total_mut -= total_mut . mean () total_mut /= total_mut . std () total2_mut = total_mut . copy () / len ( total_mut ) acor_mut = np . correlate ( total_mut , total2_mut , 'full' ) # Now generate the 'lag' axis xdata = np . arange ( 0 , len ( total )) # The acor data set is symmetric about the origin, so only accept the # positive lag times. Graph the result plt . plot ( xdata , acor [ len ( acor ) // 2 :], xdata , acor_mut [ len ( acor ) // 2 :]) plt . show () Decomposition Data \u00b6 When performing decomposition analysis, the various decomp data is stored in a separate tree of dicts referenced with the decomp key. The key sequence is similar to the sequence for the normal data described above, where decomp is followed by the solvent model ( GB or PB ), followed by the species ( complex , receptor , or ligand ) (additionally, we include delta key), followed by the decomposition components (total, backbone, or sidechain), followed by the residue number (and residue pair for pairwise decomposition), finally followed by the contribution ( internal , van der Waals , electrostatics , etc.) The available keys are shown in Figure 1 (and each key is described afterwards). Decomp Key Descriptions: gb All Generalized Born results pb All Poisson-Boltzmann results complex All results from the complex trajectory receptor All results from the receptor trajectory ligand All results from the ligand trajectory delta All results from delta total decomposition [ complex TDC - (receptor TDC + ligand TDC) ] TDC All results from the total decomposition SDC All results from the sidechain decomposition BDC All results from the backbone decomposition # All data from residue number # in per-residue and per-wise decomposition (same residue numbering scheme as in each respective topology file) ## All interaction energies between residues ## and their respective pair # in per-wise decomposition (same residue numbering scheme as in each respective topology file) int Internal energy contributions (see the idecomp variable description above) vdw van der Waals energy contributions eel Electrostatic energy contributions pol Polar solvation free energy contributions sas Non-polar solvation free energy contributions tot Total free energy contributions (sum of previous 5). Figure 1: Tree of dict keys following the decomp key in a mmpbsa_data instance.","title":"Python API"},{"location":"api/#python-api","text":"The aim of the gmx_MMPBSA API is to provide you with direct access to the raw data produced during a gmx_MMPBSA calculation. By default, gmx_MMPBSA calculates an average, standard deviation, and standard error of the mean for all the generated data sets, but it does not support custom analyses. The API reads an _GMXMMPBSA_info file, from which it will determine what kind of calculation was performed, then automatically parse the output files and load the data into arrays. Warning The topology files you used in the gmx_MMPBSA calculation must also be available in the location specified in the _GMXMMPBSA_info file.","title":"Python API"},{"location":"api/#using-the-api","text":"We have derived a new API to reorganize the data so that it is arranged more hierarchically. This makes easier to transform the data into graphs in the gmx_MMPBSA_ana . The original and the current API only differ in the name of the callable function, the disposition of the data in Per-wise decomposition analysis and in the new 'delta' key. If you want to use the original, see the Amber manual The function load_gmxmmpbsa_info takes the name of a gmx_MMPBSA info file (typically _GMXMMPBSA_info) and returns a populated mmpbsa_data instance with all the parsed data. An example code snippet that creates a mmpbsa_data instance from the information in _GMXMMPBSA_info is shown below. from GMXMMPBSA import API as gmxMMPBSAapi data = gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA_info\" )","title":"Using the API"},{"location":"api/#properties-of-mmpbsa_data","text":"The mmpbsa_data class is a nested dictionary structure ( mmpbsa_data is actually derived from dict ). The various attributes of mmpbsa_data are described below followed by the defined operators.","title":"Properties of mmpbsa_data"},{"location":"api/#attributes","text":"If the numpy package is installed and available, all data arrays will be numpy.ndarray instances. Otherwise, all data arrays will be array.array instances with the \u2019d\u2019 data type specifier (for a double precision float). The data is organized in an mmpbsa_data instance in the following manner: mmpbsa_data_instance [ calc_key ][ system_component ][ energy_term ] In this example, calc_key is a dict key that is paired to another dict ( mmpbsa_data_instance is the first-level dict , in this case) (Table 2). The keys of these second-level dict instances ( system_component ) pair to another dict (Table 3). Table 2. List and description of calc_key dict keys that may be present in instances of the mmpbsa_data class. Dictionary Key (calc_key) Calculation Type gb Generalized Born Results pb Poisson-Boltzmann Results rism gf Gaussian Fluctuation 3D-RISM Results rism std Standard 3D-RISM Results nmode Normal Mode Analysis Results qh Quasi-harmonic Approximation Results Table 3. List and description of system_component keys that may be present in instances of the mmpbsa_data class. Dictionary Key (system_component) Description complex Data sets for the complex. (Stability & Binding) receptor Data sets for the receptor. (Binding only) ligand Data sets for the ligand. (Binding only) delta Data sets for the delta. (Binding only) The keys of these inner-most (third-level) dict instances are paired with the data arrays for that energy term (Table 4). The various dictionary keys are listed below for each level. If alanine scanning was performed, the mmpbsa_data_instance also has a \"mutant\" attribute that contains the same dictionary structure as mmpbsa_data does for the normal system. If not, the mutant attribute is None. The only difference is that the data is accessed as follows: mmpbsa_data_instance . mutant [ calc_key ][ system_component ][ energy_term ] Warning All keys are case-sensitive, and if a space appears in the key, it must be present in your program. Also, if polar/non-polar decomposition is not performed for 3D-RISM , then the POLAR SOLV and APOLAR SOLV keys are replaced with the single key ERISM Table 4. List and description of energy_term keys that may be present in instances of the mmpbsa_data class. The allowed values of energy_term depend on the value of calc_key above in Table 2. The energy_term keys are listed for each calc_key enumerated above, accompanied by a description. The RISM keys are the same for both rism gf and rism std although the value of POLAR SOLV and APOLAR SOLV will differ depending on the method chosen. Those keys marked with * are specific to the CHARMM force field used through chamber. Those arrays are all 0 for normal Amber topology files. Description gb pb RISM Bond energy BOND BOND BOND Angle energy ANGLE ANGLE ANGLE Dihedral Energy DIHED DIHED DIHED Urey-Bradley* UB UB \u2014 Improper Dihedrals* IMP IMP \u2014 Correction Map* CMAP CMAP \u2014 1-4 van der Waals energy 1-4 VDW 1-4 VDW 1-4 VDW 1-4 Electrostatic energy 1-4 EEL 1-4 EEL 1-4 EEL van der Waals energy VDWAALS VDWAALS VDWAALS Electrostatic energy EEL EEL EEL Polar solvation energy EGB EPB POLAR SOLV Non-polar solvation energy ESURF ENPOLAR APOLAR SOLV Total solvation free energy G solv G solv G solv Total gas phase free energy G gas G gas G gas Total energy TOTAL TOTAL TOTAL Table 5. Same as Table 4 for the entropy data. Description nmode qh Translational entropy Translational Translational Rotational entropy Rotational Rotational Vibrational entropy Vibrational Vibrational Total entropy Total Total","title":"Attributes"},{"location":"api/#defined-operators","text":"In-place addition: It extends all of the arrays that are common to both mmpbsa_data instances. This is useful if, for instance, you run two gmx_MMPBSA calculations, and you use -prefix for the second simulation. Assuming that is _GMXMMPBSA2_ for the second gmx_MMPBSA calculation, the following pseudo-code will generate an mmpbsa_data instance with all of the data in concatenated arrays. The pseudo-code assumes GMXMMPBSA.API was imported as demonstrated below. data = gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA_info\" ) data += gmxMMPBSAapi . load_gmxmmpbsa_info ( \"_GMXMMPBSA2_info\" )","title":"Defined operators"},{"location":"api/#example-api-usage","text":"In many cases, the autocorrelation function of the energy can aid in the analysis of MM/PBSA data, since it provides a way of determining the statistical independence of your data points. For example, 1000 correlated snapshots provide less information, and therefore less statistical certainty, than 1000 uncorrelated snapshots. The standard error of the mean calculation performed by gmx_MMPBSA assumes a completely uncorrelated set of snapshots, which means that it is a lower bound of the true standard error of the mean, and a plot of the autocorrelation function may help determine the actual value. The example program below will calculate the autocorrelation function of the total energy (complex only for both the normal and alanine mutant systems) from a GB calculation and plot the resulting code using matplotlib. import os import sys # append AMBERHOME/bin to sys.path sys . path . append ( os . path . join ( os . getenv ( 'AMBERHOME' ), 'bin' )) # Now import the MMPBSA API from GMXMMPBSA import API as gmxMMPBSAapi import matplotlib.pyplot as plt import numpy as np data = gmxMMPBSAapi . load_gmxmmpbsa_info ( '_GMXMMPBSA_info' ) total = data [ 'gb' ][ 'complex' ][ 'TOTAL' ] . copy () data = gmxMMPBSAapi . load_gmxmmpbsa_info ( '_GMXMMPBSA_info' ) total_mut = data . mutant [ 'gb' ][ 'complex' ][ 'TOTAL' ] . copy () # Create a second copy of the data set. The np.correlate function does not # normalize the correlation function, so we modify total and total2 to get # that effect total -= total . mean () total /= total . std () total2 = total . copy () / len ( total ) acor = np . correlate ( total , total2 , 'full' ) total_mut -= total_mut . mean () total_mut /= total_mut . std () total2_mut = total_mut . copy () / len ( total_mut ) acor_mut = np . correlate ( total_mut , total2_mut , 'full' ) # Now generate the 'lag' axis xdata = np . arange ( 0 , len ( total )) # The acor data set is symmetric about the origin, so only accept the # positive lag times. Graph the result plt . plot ( xdata , acor [ len ( acor ) // 2 :], xdata , acor_mut [ len ( acor ) // 2 :]) plt . show ()","title":"Example API Usage"},{"location":"api/#decomposition-data","text":"When performing decomposition analysis, the various decomp data is stored in a separate tree of dicts referenced with the decomp key. The key sequence is similar to the sequence for the normal data described above, where decomp is followed by the solvent model ( GB or PB ), followed by the species ( complex , receptor , or ligand ) (additionally, we include delta key), followed by the decomposition components (total, backbone, or sidechain), followed by the residue number (and residue pair for pairwise decomposition), finally followed by the contribution ( internal , van der Waals , electrostatics , etc.) The available keys are shown in Figure 1 (and each key is described afterwards). Decomp Key Descriptions: gb All Generalized Born results pb All Poisson-Boltzmann results complex All results from the complex trajectory receptor All results from the receptor trajectory ligand All results from the ligand trajectory delta All results from delta total decomposition [ complex TDC - (receptor TDC + ligand TDC) ] TDC All results from the total decomposition SDC All results from the sidechain decomposition BDC All results from the backbone decomposition # All data from residue number # in per-residue and per-wise decomposition (same residue numbering scheme as in each respective topology file) ## All interaction energies between residues ## and their respective pair # in per-wise decomposition (same residue numbering scheme as in each respective topology file) int Internal energy contributions (see the idecomp variable description above) vdw van der Waals energy contributions eel Electrostatic energy contributions pol Polar solvation free energy contributions sas Non-polar solvation free energy contributions tot Total free energy contributions (sum of previous 5). Figure 1: Tree of dict keys following the decomp key in a mmpbsa_data instance.","title":"Decomposition Data"},{"location":"changelog/","text":"Changelog \u00b6 Upcoming release (minor v1.4.0) \u00b6 This version is almost entirely focused on gmx_MMPBSA_ana Additions \u00b6 New set of graphics (heatmap) Interactive visualization with PyMOL Multiple systems to analyze in the same session Calculations and plotting of the correlation between the systems Fixes \u00b6 Graphics improvements Changes \u00b6 Residues notation: CHAIN:RESNAME:RESNUMBER instead of Amber residue index IE in API Color Palette gxm_MMPBSA v1.3.2 (01/03/2021) \u00b6 Additions \u00b6 Now, gmx_MMPBSA is in Zenodo . You can refer to us in this way in what we publish the article Added Interaction Entropy to gmx_MMPBSA output file Added a new class to save IE in a csv file Added \"Go to Top\" button to documentation HTML. Fixes \u00b6 Error when ligand and/or receptor are discontinuous (Testing it) Error when ligand and/or receptor are discontinuous and numbered non-consecutively Non-critical errors and inconsistencies in documentation Changes \u00b6 receptor_mask and ligand_mask have been removed from input file variables. Now we extract the amber mask directly based on the GROMACS index file The receptor and ligand mapping in the complex was improved. Now we use a method based on the GROMACS index file The method Map of the system_MMPBSA class has been restructured. Now always processes amber masks Changing the IE calculation function to a class gmx_MMPBSA-v1.3.1 \u00b6 Additions \u00b6 New variable ( overwrite_data ) to overwrite gmx_MMPBSA data. More informative message when sander fail. Useful for PB calculation Fixes \u00b6 Protein-ligand with charmm force field example Stability calculation gmx path error leaprc.GLYCAM_06h-1 file Protein-glycan example Changes \u00b6 Documentation banner gmx_MMPBSA-v1.3.0 \u00b6 Additions \u00b6 Documentation at Github pages Charmm force field support Amber topology generation from GROMACS topology. Work for Charmm and Amber force fields New flag for topologies ( -cp , -rp and -lp ) added Now gmx_MMPBSA supports discontinuous receptor and ligand. Glycine scanning Autocompletion script for both gmx_MMPBSA and gmx_MMPBSA_ana Versioneer to control the semantic version. Argument type checker for the command-line Fixes \u00b6 Alanine scanning tutorial GROMACS executable path The -gui option has been changed by -nogui and fixed when it is defined Improvement on documentation Changes \u00b6 Documentation theme. Now we use Material Alanine scanning variable. Now mutant correspond to mutant amino acid (ALA and GLY) The gmx_MMPBSA_gui was changed by gmx_MMPBSA_ana Improvement on the topologies construction process Order in which the trajectories are cleaned. Now, the topology is built and finally, the trajectories are cleaned gmx_MMPBSA v1.2.0 \u00b6 Additions \u00b6 New ligand force field (Zwitterionic aminoacids) A new flag (-cr) added for defining a reference structure (guarantee a better consintency in generated PDB files) API documentation Fixes \u00b6 More comprehensive output log file Best handling of structure files Changes \u00b6 gmx editconf is used to generate PDB files instead of gmx trjconv ( #14 ) gmx_MMPBSA data is copied in AMBER as an independent folder *gro files can be used as a MD Structure+mass(db) file Updated tutorial list in README (Protein_DNA_RNA_Ion_ligand BFE calculations) gmx_MMPBSA v1.1.1 \u00b6 Additions \u00b6 New tutorial added (see Protein_DNA_RNA_Ion_ligand tutorial) Fixes \u00b6 Support various metallo-complexes formats Changes \u00b6 Keep all the temporary files in the folder for debugging purposes gxm_MMPBSA v.1.1.0 \u00b6 Additions \u00b6 Now supports carbohydrates as ligand. See this tutorial Now supports metalloprotein-ligand complexes. See this tutorial. We have added data folder to gmx_MMPBSA module. This folder contains the GLYCAM_06h-1 force field files (Compatible with amber99sb and early, see at http://glycam.org ) which is not in AmberTools. Fixes \u00b6 Minor bugs Changes \u00b6 We changed the notation of the force fields, now the user can define any force field (We have only tested Amber and GLYCAM force fields) available in AmberTools. Charmm is not yet supported. See this section gxm_MMPBSA first release \u00b6 This version includes: Compatibility with different Gromacs versions Support for all types of calculations available in MMPBSA.py Graphical user interface for results analysis (gmx_MMPBSA_ana) API modified to get more information Some new facilities and types of calculations","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#upcoming-release-minor-v140","text":"This version is almost entirely focused on gmx_MMPBSA_ana","title":"Upcoming release (minor v1.4.0)"},{"location":"changelog/#additions","text":"New set of graphics (heatmap) Interactive visualization with PyMOL Multiple systems to analyze in the same session Calculations and plotting of the correlation between the systems","title":"Additions"},{"location":"changelog/#fixes","text":"Graphics improvements","title":"Fixes"},{"location":"changelog/#changes","text":"Residues notation: CHAIN:RESNAME:RESNUMBER instead of Amber residue index IE in API Color Palette","title":"Changes"},{"location":"changelog/#gxm_mmpbsa-v132-01032021","text":"","title":"gxm_MMPBSA v1.3.2 (01/03/2021)"},{"location":"changelog/#additions_1","text":"Now, gmx_MMPBSA is in Zenodo . You can refer to us in this way in what we publish the article Added Interaction Entropy to gmx_MMPBSA output file Added a new class to save IE in a csv file Added \"Go to Top\" button to documentation HTML.","title":"Additions"},{"location":"changelog/#fixes_1","text":"Error when ligand and/or receptor are discontinuous (Testing it) Error when ligand and/or receptor are discontinuous and numbered non-consecutively Non-critical errors and inconsistencies in documentation","title":"Fixes"},{"location":"changelog/#changes_1","text":"receptor_mask and ligand_mask have been removed from input file variables. Now we extract the amber mask directly based on the GROMACS index file The receptor and ligand mapping in the complex was improved. Now we use a method based on the GROMACS index file The method Map of the system_MMPBSA class has been restructured. Now always processes amber masks Changing the IE calculation function to a class","title":"Changes"},{"location":"changelog/#gmx_mmpbsa-v131","text":"","title":"gmx_MMPBSA-v1.3.1"},{"location":"changelog/#additions_2","text":"New variable ( overwrite_data ) to overwrite gmx_MMPBSA data. More informative message when sander fail. Useful for PB calculation","title":"Additions"},{"location":"changelog/#fixes_2","text":"Protein-ligand with charmm force field example Stability calculation gmx path error leaprc.GLYCAM_06h-1 file Protein-glycan example","title":"Fixes"},{"location":"changelog/#changes_2","text":"Documentation banner","title":"Changes"},{"location":"changelog/#gmx_mmpbsa-v130","text":"","title":"gmx_MMPBSA-v1.3.0"},{"location":"changelog/#additions_3","text":"Documentation at Github pages Charmm force field support Amber topology generation from GROMACS topology. Work for Charmm and Amber force fields New flag for topologies ( -cp , -rp and -lp ) added Now gmx_MMPBSA supports discontinuous receptor and ligand. Glycine scanning Autocompletion script for both gmx_MMPBSA and gmx_MMPBSA_ana Versioneer to control the semantic version. Argument type checker for the command-line","title":"Additions"},{"location":"changelog/#fixes_3","text":"Alanine scanning tutorial GROMACS executable path The -gui option has been changed by -nogui and fixed when it is defined Improvement on documentation","title":"Fixes"},{"location":"changelog/#changes_3","text":"Documentation theme. Now we use Material Alanine scanning variable. Now mutant correspond to mutant amino acid (ALA and GLY) The gmx_MMPBSA_gui was changed by gmx_MMPBSA_ana Improvement on the topologies construction process Order in which the trajectories are cleaned. Now, the topology is built and finally, the trajectories are cleaned","title":"Changes"},{"location":"changelog/#gmx_mmpbsa-v120","text":"","title":"gmx_MMPBSA v1.2.0"},{"location":"changelog/#additions_4","text":"New ligand force field (Zwitterionic aminoacids) A new flag (-cr) added for defining a reference structure (guarantee a better consintency in generated PDB files) API documentation","title":"Additions"},{"location":"changelog/#fixes_4","text":"More comprehensive output log file Best handling of structure files","title":"Fixes"},{"location":"changelog/#changes_4","text":"gmx editconf is used to generate PDB files instead of gmx trjconv ( #14 ) gmx_MMPBSA data is copied in AMBER as an independent folder *gro files can be used as a MD Structure+mass(db) file Updated tutorial list in README (Protein_DNA_RNA_Ion_ligand BFE calculations)","title":"Changes"},{"location":"changelog/#gmx_mmpbsa-v111","text":"","title":"gmx_MMPBSA v1.1.1"},{"location":"changelog/#additions_5","text":"New tutorial added (see Protein_DNA_RNA_Ion_ligand tutorial)","title":"Additions"},{"location":"changelog/#fixes_5","text":"Support various metallo-complexes formats","title":"Fixes"},{"location":"changelog/#changes_5","text":"Keep all the temporary files in the folder for debugging purposes","title":"Changes"},{"location":"changelog/#gxm_mmpbsa-v110","text":"","title":"gxm_MMPBSA v.1.1.0"},{"location":"changelog/#additions_6","text":"Now supports carbohydrates as ligand. See this tutorial Now supports metalloprotein-ligand complexes. See this tutorial. We have added data folder to gmx_MMPBSA module. This folder contains the GLYCAM_06h-1 force field files (Compatible with amber99sb and early, see at http://glycam.org ) which is not in AmberTools.","title":"Additions"},{"location":"changelog/#fixes_6","text":"Minor bugs","title":"Fixes"},{"location":"changelog/#changes_6","text":"We changed the notation of the force fields, now the user can define any force field (We have only tested Amber and GLYCAM force fields) available in AmberTools. Charmm is not yet supported. See this section","title":"Changes"},{"location":"changelog/#gxm_mmpbsa-first-release","text":"This version includes: Compatibility with different Gromacs versions Support for all types of calculations available in MMPBSA.py Graphical user interface for results analysis (gmx_MMPBSA_ana) API modified to get more information Some new facilities and types of calculations","title":"gxm_MMPBSA first release"},{"location":"charmm/","text":"Charmm and MM(PB/GB)SA \u00b6 Take care PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and Charmm force field hasn't been tested extensively. Please, check this thread for more information and proceed cautiously.","title":"Charmm and MM(PB/GB)SA"},{"location":"charmm/#charmm-and-mmpbgbsa","text":"Take care PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and Charmm force field hasn't been tested extensively. Please, check this thread for more information and proceed cautiously.","title":"Charmm and MM(PB/GB)SA"},{"location":"command-line/","text":"gmx_MMPBSA command-line \u00b6 Calling gmx_MMPBSA from the command-line \u00b6 gmx_MMPBSA is invoked through the command line as follows: $ gmx_MMPBSA -h usage: gmx_MMPBSA [-h] [-v] [--input-file-help] [-O] [-prefix <file prefix>] [-i FILE] [-xvvfile XVVFILE] [-o FILE] [-do FILE] [-eo FILE] [-deo FILE] [-gui] [-s] [-cs <Structure File>] [-ci <Index File>] [-cg index index] [-ct [TRJ [TRJ ...]]] [-cp <Topology>] [-cr <PDB File>] [-rs <Structure File>] [-ri <Index File>] [-rg index] [-rt [TRJ [TRJ ...]]] [-rp <Topology>] [-lm <Structure File>] [-ls <Structure File>] [-li <Index File>] [-lg index] [-lt [TRJ [TRJ ...]]] [-lp <Topology>] [-make-mdins] [-use-mdins] [-rewrite-output] [--clean] gmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. This program is an adaptation of Amber's MMPBSA.py and essentially works as such. As gmx_MMPBSA adapts MMPBSA.py, since it has all the resources of this script and work with any GROMACS version. optional arguments: -h, --help show this help message and exit -v, --version show program's version number and exit --input-file-help Print all available options in the input file. (default: False) Miscellaneous Options: -O, --overwrite Allow output files to be overwritten (default: False) -prefix <file prefix> Prefix for intermediate files. (default: _GMXMMPBSA_) Input and Output Files: These options specify the input files and optional output files. -i FILE MM/PBSA input file. (default: None) -xvvfile XVVFILE XVV file for 3D-RISM. (default: /path/installed/amber20/dat/mmpbsa/spc.xvv) -o FILE Output file with MM/PBSA statistics. (default: FINAL_RESULTS_MMPBSA.dat) -do FILE Output file for decomposition statistics summary. (default: FINAL_DECOMP_MMPBSA.dat) -eo FILE CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line. (default: None) -deo FILE CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line. (default: None) -nogui Open charts application when all calculations finished (default: True) -stability Perform stability calculation. Only the complex parameters are required. If ligand is non-Protein (small molecule) type, then ligand *.mol2 file is required. In any other case receptor and ligand parameters will be ignored. See description bellow (default: False) Complex: Complex files and info that are needed to perform the calculation. If the receptor and/or the ligand info is not defined, we generate them from that of the complex. -cs <Structure File> Structure file of the complex. If it is Protein-Ligand (small molecule) complex, make sure that you define -lm option. See -lm description below Allowed formats: *.tpr (recommended), *.pdb, *.gro (default: None) -ci <Index File> Index file of the bound complex. (default: None) -cg index index Groups of receptor and ligand in complex index file. The notation is as follows: \"-cg <Receptor group> <Ligand group>\", ie. -cg 1 13 (default: None) -ct [TRJ [TRJ ...]] Input trajectories of the complex. Make sure the trajectory is fitted and pbc have been removed. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like). (default: None) -cp <Topology> Topology file of the complex. (default: None) -cr <PDB File> Complex Reference Structure file. This option is optional but recommended (Use the PDB file used to generate the topology in GROMACS). If not defined, the chains ID assignment (if the structure used in -cs does not have chain IDs) will be done automatically according to the structure (can generate inconsistencies). (default: None) Receptor: Receptor files and info that are needed to perform the calculation. If the receptor info is not defined, we generate it from that of the complex. -rs <Structure File> Structure file of the unbound receptor for multiple trajectory approach. Allowed formats: *.tpr (recommended), *.pdb, *.gro (default: None) -ri <Index File> Index file of the unbound receptor. (default: None) -rg index Receptor group in receptor index file. Notation: \"-rg <Receptor group>\", e.g. -rg 1 (default: None) -rt [TRJ [TRJ ...]] Input trajectories of the unbound receptor for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb, *.gro (specify as many as you'd like). (default: None) -rp <Topology> Topology file of the receptor. (default: None) Ligand: Ligand files and info that are needed to perform the calculation. If the ligand are not defined, we generate it from that of the complex. -lm <Structure File> A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS using Anetchamber. Must be defined if Protein-Ligand (small molecule) complex was define. No needed for Proteins, DNA, RNA, Ions, and Glycans. Antechamber output *.mol2 is recommended. (default: None) -ls <Structure File> Structure file of the unbound ligand. If ligand is a small molecule, make sure that you define above -lm option. Allowed formats: *.tpr (recommended), *.pdb, *.gro (default: None) -li <Index File> Index file of the unbound ligand. Only if tpr file was define in -ls. (default: None) -lg index Ligand group in ligand index file. Notation: \"-lg <Ligand group>\", e.g. -lg 13 (default: None) -lt [TRJ [TRJ ...]] Input trajectories of the unbound ligand for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb, *.gro (specify as many as you'd like). (default: None) -lp <Topology> Topology file of the ligand. (default: None) Miscellaneous Actions: -make-mdins Create the input files for each calculation and quit. This allows you to modify them and re-run using -use-mdins (default: False) -use-mdins Use existing input files for each calculation. If they do not exist with the appropriate names, run_cmd.py will quit in error. (default: False) -rewrite-output Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files. (default: False) --clean Clean temporary files and quit. (default: False) This program will calculate binding free energies using end-state free energy methods on an ensemble of snapshots using a variety of implicit solvent models. Based on MMPBSA.py (version 16.0) and AmberTools20 Running gmx_MMPBSA \u00b6 Serial version \u00b6 This version is installed via pip as described above. AMBERHOME variable must be set, or it will quit with an error. An example command-line call is shown below: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc You can found test files on GitHub Parallel (MPI) version \u00b6 Unlike MMPBSA.py, gmx_MMPBSA will be installed as a separate package from the Amber installation. When installing Amber with mpi, a MMPBSA.py version called \"MMPBSA.py.MPI\" will be installed as well. Since we cannot detect if Amber was installed one way or another, we simply decided to adapt the gmx_MMPBSA executable to use an argument. That is, gmx_MMPBSA is a single script that executes the serial version or the parallel version with mpi depending on whether the user defines the \"mpi\" or \"MPI\" argument. In principle, both the serial and parallel versions should work correctly when Amber was installed in parallel. The parallel version, like MMPBSA.py.MPI requires the mpi4py module. If you did the parallel installation of Amber, it should be installed. In any case, it could be installed in the following way: amber.python -m pip install mpi4py A usage example is shown below: mpirun -np 2 gmx_MMPBSA MPI -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc or mpirun -np 2 gmx_MMPBSA mpi -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc Note At a certain level, running RISM in parallel may actually hurt performance, since previous solutions are used as an initial guess for the next frame, hastening convergence. Running in parallel loses this advantage. Also, due to the overhead involved in which each thread is required to load every topology file when calculating energies, parallel scaling will begin to fall off as the number of threads reaches the number of frames.","title":"Command-line"},{"location":"command-line/#gmx_mmpbsa-command-line","text":"","title":"gmx_MMPBSA command-line"},{"location":"command-line/#calling-gmx_mmpbsa-from-the-command-line","text":"gmx_MMPBSA is invoked through the command line as follows: $ gmx_MMPBSA -h usage: gmx_MMPBSA [-h] [-v] [--input-file-help] [-O] [-prefix <file prefix>] [-i FILE] [-xvvfile XVVFILE] [-o FILE] [-do FILE] [-eo FILE] [-deo FILE] [-gui] [-s] [-cs <Structure File>] [-ci <Index File>] [-cg index index] [-ct [TRJ [TRJ ...]]] [-cp <Topology>] [-cr <PDB File>] [-rs <Structure File>] [-ri <Index File>] [-rg index] [-rt [TRJ [TRJ ...]]] [-rp <Topology>] [-lm <Structure File>] [-ls <Structure File>] [-li <Index File>] [-lg index] [-lt [TRJ [TRJ ...]]] [-lp <Topology>] [-make-mdins] [-use-mdins] [-rewrite-output] [--clean] gmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. This program is an adaptation of Amber's MMPBSA.py and essentially works as such. As gmx_MMPBSA adapts MMPBSA.py, since it has all the resources of this script and work with any GROMACS version. optional arguments: -h, --help show this help message and exit -v, --version show program's version number and exit --input-file-help Print all available options in the input file. (default: False) Miscellaneous Options: -O, --overwrite Allow output files to be overwritten (default: False) -prefix <file prefix> Prefix for intermediate files. (default: _GMXMMPBSA_) Input and Output Files: These options specify the input files and optional output files. -i FILE MM/PBSA input file. (default: None) -xvvfile XVVFILE XVV file for 3D-RISM. (default: /path/installed/amber20/dat/mmpbsa/spc.xvv) -o FILE Output file with MM/PBSA statistics. (default: FINAL_RESULTS_MMPBSA.dat) -do FILE Output file for decomposition statistics summary. (default: FINAL_DECOMP_MMPBSA.dat) -eo FILE CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line. (default: None) -deo FILE CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line. (default: None) -nogui Open charts application when all calculations finished (default: True) -stability Perform stability calculation. Only the complex parameters are required. If ligand is non-Protein (small molecule) type, then ligand *.mol2 file is required. In any other case receptor and ligand parameters will be ignored. See description bellow (default: False) Complex: Complex files and info that are needed to perform the calculation. If the receptor and/or the ligand info is not defined, we generate them from that of the complex. -cs <Structure File> Structure file of the complex. If it is Protein-Ligand (small molecule) complex, make sure that you define -lm option. See -lm description below Allowed formats: *.tpr (recommended), *.pdb, *.gro (default: None) -ci <Index File> Index file of the bound complex. (default: None) -cg index index Groups of receptor and ligand in complex index file. The notation is as follows: \"-cg <Receptor group> <Ligand group>\", ie. -cg 1 13 (default: None) -ct [TRJ [TRJ ...]] Input trajectories of the complex. Make sure the trajectory is fitted and pbc have been removed. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like). (default: None) -cp <Topology> Topology file of the complex. (default: None) -cr <PDB File> Complex Reference Structure file. This option is optional but recommended (Use the PDB file used to generate the topology in GROMACS). If not defined, the chains ID assignment (if the structure used in -cs does not have chain IDs) will be done automatically according to the structure (can generate inconsistencies). (default: None) Receptor: Receptor files and info that are needed to perform the calculation. If the receptor info is not defined, we generate it from that of the complex. -rs <Structure File> Structure file of the unbound receptor for multiple trajectory approach. Allowed formats: *.tpr (recommended), *.pdb, *.gro (default: None) -ri <Index File> Index file of the unbound receptor. (default: None) -rg index Receptor group in receptor index file. Notation: \"-rg <Receptor group>\", e.g. -rg 1 (default: None) -rt [TRJ [TRJ ...]] Input trajectories of the unbound receptor for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb, *.gro (specify as many as you'd like). (default: None) -rp <Topology> Topology file of the receptor. (default: None) Ligand: Ligand files and info that are needed to perform the calculation. If the ligand are not defined, we generate it from that of the complex. -lm <Structure File> A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS using Anetchamber. Must be defined if Protein-Ligand (small molecule) complex was define. No needed for Proteins, DNA, RNA, Ions, and Glycans. Antechamber output *.mol2 is recommended. (default: None) -ls <Structure File> Structure file of the unbound ligand. If ligand is a small molecule, make sure that you define above -lm option. Allowed formats: *.tpr (recommended), *.pdb, *.gro (default: None) -li <Index File> Index file of the unbound ligand. Only if tpr file was define in -ls. (default: None) -lg index Ligand group in ligand index file. Notation: \"-lg <Ligand group>\", e.g. -lg 13 (default: None) -lt [TRJ [TRJ ...]] Input trajectories of the unbound ligand for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb, *.gro (specify as many as you'd like). (default: None) -lp <Topology> Topology file of the ligand. (default: None) Miscellaneous Actions: -make-mdins Create the input files for each calculation and quit. This allows you to modify them and re-run using -use-mdins (default: False) -use-mdins Use existing input files for each calculation. If they do not exist with the appropriate names, run_cmd.py will quit in error. (default: False) -rewrite-output Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files. (default: False) --clean Clean temporary files and quit. (default: False) This program will calculate binding free energies using end-state free energy methods on an ensemble of snapshots using a variety of implicit solvent models. Based on MMPBSA.py (version 16.0) and AmberTools20","title":"Calling gmx_MMPBSA from the command-line"},{"location":"command-line/#running-gmx_mmpbsa","text":"","title":"Running gmx_MMPBSA"},{"location":"command-line/#serial-version","text":"This version is installed via pip as described above. AMBERHOME variable must be set, or it will quit with an error. An example command-line call is shown below: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc You can found test files on GitHub","title":"Serial version"},{"location":"command-line/#parallel-mpi-version","text":"Unlike MMPBSA.py, gmx_MMPBSA will be installed as a separate package from the Amber installation. When installing Amber with mpi, a MMPBSA.py version called \"MMPBSA.py.MPI\" will be installed as well. Since we cannot detect if Amber was installed one way or another, we simply decided to adapt the gmx_MMPBSA executable to use an argument. That is, gmx_MMPBSA is a single script that executes the serial version or the parallel version with mpi depending on whether the user defines the \"mpi\" or \"MPI\" argument. In principle, both the serial and parallel versions should work correctly when Amber was installed in parallel. The parallel version, like MMPBSA.py.MPI requires the mpi4py module. If you did the parallel installation of Amber, it should be installed. In any case, it could be installed in the following way: amber.python -m pip install mpi4py A usage example is shown below: mpirun -np 2 gmx_MMPBSA MPI -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc or mpirun -np 2 gmx_MMPBSA mpi -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc Note At a certain level, running RISM in parallel may actually hurt performance, since previous solutions are used as an initial guess for the next frame, hastening convergence. Running in parallel loses this advantage. Also, due to the overhead involved in which each thread is required to load every topology file when calculating energies, parallel scaling will begin to fall off as the number of threads reaches the number of frames.","title":"Parallel (MPI) version"},{"location":"getting-started/","text":"Getting started \u00b6 gmx_MMPBSA is a new tool aid to perform end-state free energy calculations based on AMBER's MMPBSA.py with GROMACS files. Most of the documentation below is found in the Amber manual , we will point out what is new or different. Neither of these should be considered as a \u201cblack-box\u201d, and users should be familiar with Amber and MM/PB(GB)SA method before at-tempting these sorts of calculations. These scripts automate a series of calculations, and cannot trap all the types of errors that might occur. Important We do not intend to replace the original MMPBSA.py ; instead, we have implemented and improved some functionalities, and what is most important, made this valuable tool available for GROMACS users. Most of the documentation below is found in the Amber manual , we will point out what is new or different.","title":"Overview"},{"location":"getting-started/#getting-started","text":"gmx_MMPBSA is a new tool aid to perform end-state free energy calculations based on AMBER's MMPBSA.py with GROMACS files. Most of the documentation below is found in the Amber manual , we will point out what is new or different. Neither of these should be considered as a \u201cblack-box\u201d, and users should be familiar with Amber and MM/PB(GB)SA method before at-tempting these sorts of calculations. These scripts automate a series of calculations, and cannot trap all the types of errors that might occur. Important We do not intend to replace the original MMPBSA.py ; instead, we have implemented and improved some functionalities, and what is most important, made this valuable tool available for GROMACS users. Most of the documentation below is found in the Amber manual , we will point out what is new or different.","title":"Getting started"},{"location":"howworks/","text":"How gmx_MMPBSA works \u00b6 gmx_MMPBSA is a new tool aid to perform end-state free energy calculations based on AMBER's MMPBSA.py with GROMACS files. But, what does that mean? Basically, gmx_MMPBSA brings in all the MMPBSA.py functionalities to GROMACS users. MMPBSA.py is an excellent and well-known tool to perform calculations with the PB and GB models in AMBER (February/2021 more than 1200 citations). On the other hand, there are tools like g_mmpbsa that are well known in the GROMACS community (February/2021 more than 1100 citations). Interestingly, MMPBSA.py is more robust and was published first, however, both have a similar number of citations. This is probably due to the fact that the GROMACS (Open source and free) community is large, while AMBER has the restriction of a paid license, or a small community with free academic license. The use of MMPBSA.py for GROMACS users requires enormous effort to successfully complete the process. In that regard, we have decided to make our experience in this process available to the community. We have not limited ourselves only to the extent of utility itself, but added additional value. We have designed a tool that allows to perform a number of calculations in an effortless way with a graphical tool incorporated, which we believe has great potential for the analysis of the results obtained. We also have incorporated some functionalities that aren't present in MMPBSA.py and made others more accessible to the beginner user in Amber. gmx_MMPBSA general workflow \u00b6 gmx_MMPBSA can be divided into 3 parts as shown in figure 1. IN the first part, Preparation , the topologies and trajectories are generated, among other elements depending on the calculations, such as the mutants for the alanine or glycine scanning or the interaction residues during decomposition analysis. In the second part, Calculation , the binding free energies and/or entropies are estimated using the selected models. Finally, in the last step Analysis , the results can be analyzed by using the graphical user interface gmx_MMPBSA_ana . Figure 1: gmx_MMPBSA general workflow Required input files \u00b6 Currently, gmx_MMPBSA supports two families of force fields: Amber and CHARMM. Although these force fileds are quite similar, the generation of topologies differs. When Amber force filed was used to prepare the system(s), the topologies compatible with AMBER package can be generated from either GROMACS topologies or structures. Meanwhile, when CHARMM force field is used, AMBER's topologies are generated from GROMACS topologies exclusively. (Table 1). Table 1: Required input files for every force field Force field Structure Index Trajectory Topology Reference Structure Small Molecule Mol2 AMBER tpr, gro, pdb ndx xtc, trr, pdb Optional Optional Only if not top CHARMM tpr, gro, pdb ndx xtc, trr, pdb Always Optional No Topology preparation \u00b6 In this section, we will go in deatil about each file and what they are used for. GROMACS files MD Structure+mass(db) (tpr, gro, pdb): This file is used to generate the structure in pdb format of the complex with editconf . We recommend using the *.tpr (production *.tpr) format. Index (ndx) This the file that contains the index of each element contained in the *.tpr file, organized as groups. This file is required for the definition of the groups corresponding to the receptor and the ligand. Trajectory (xtc, trr, pdb) Trajectory files. Topology (top) This file contains all the parameters corresponding to the force field selected during the system setup. When using a GROMACS topology, parmed is used for converting the topologies. This method can be useful when studying a complex system with many elements. However, its main strength (flexibility) is its main weakness. GROMACS can parameterize your system differently than AMBER, so the conversion can result in a topology with very dissimilar parameters that AMBER does not understand. If you use amber, you can consider whether to use this method or not. However, when using CHARMM (any version) force field, the topology is always required. Reference Structure It corresponds to a file in *.pdb format that must contain a complete structure. That is, the user must make sure that this structure contains the same number of atoms and residues as the complex that he initially defined, the correct residue numbering, as well as its chain ID. This structure is optional, but we recommend using it since it should guarantee a smooth processing of the files in gmx_MMPBSA . Essentially, the objective is to be able to correctly assign the mentioned parameters since internally gmx_MMPBSA handles sensitive information, for example: when it extracts the receptor and the ligand from the complex structure, the mutation in the alanine scan, etc. Small molecule parameters (mol2) This file contains a ligand parameterization with antechamber that is not found in the selected force field (Amber family). It is only necessary to define it when studying a system that contains this type of ligand, and a topology has not been defined. This is used to build amber topology from structure using tleap . Here are the steps that gmx_MMPBSA follows to generate the topologies: Specific steps for the topology are highlighted like this Generates a new index and registers the groups defined by the user Generates the pdb of the complex, receptor, and ligand Topologies are cleaned (remove water and ions) The structures or parameters for the receptor and the ligand are generated if it is a ST approximation. If Alanine scanning: the mutant of the complex, and the mutant receptor or ligand are generated If decomposition: interaction residues are extracted The complex is mapped. Registers the continuity of the receptor (example: Metalloprotein structure files are generally structured as follows: Receptor protein + Ligand + Receptor Ions) The PBRadii is assigned Topologies are converted with parmed or generated with tleap The following figure shows the process to generate AMBER topologies depending on the force field. Figure 2: Topology generation workflow for Single Trajectory Approximation Analysis with gmx_MMPBSA analyzer tool ( gmx_MMPBSA_ana ) \u00b6 gmx_MMPBSA_ana is very intuitive and easy to use. We will expand this section soon","title":"How gmx_MMPBSA works"},{"location":"howworks/#how-gmx_mmpbsa-works","text":"gmx_MMPBSA is a new tool aid to perform end-state free energy calculations based on AMBER's MMPBSA.py with GROMACS files. But, what does that mean? Basically, gmx_MMPBSA brings in all the MMPBSA.py functionalities to GROMACS users. MMPBSA.py is an excellent and well-known tool to perform calculations with the PB and GB models in AMBER (February/2021 more than 1200 citations). On the other hand, there are tools like g_mmpbsa that are well known in the GROMACS community (February/2021 more than 1100 citations). Interestingly, MMPBSA.py is more robust and was published first, however, both have a similar number of citations. This is probably due to the fact that the GROMACS (Open source and free) community is large, while AMBER has the restriction of a paid license, or a small community with free academic license. The use of MMPBSA.py for GROMACS users requires enormous effort to successfully complete the process. In that regard, we have decided to make our experience in this process available to the community. We have not limited ourselves only to the extent of utility itself, but added additional value. We have designed a tool that allows to perform a number of calculations in an effortless way with a graphical tool incorporated, which we believe has great potential for the analysis of the results obtained. We also have incorporated some functionalities that aren't present in MMPBSA.py and made others more accessible to the beginner user in Amber.","title":"How gmx_MMPBSA works"},{"location":"howworks/#gmx_mmpbsa-general-workflow","text":"gmx_MMPBSA can be divided into 3 parts as shown in figure 1. IN the first part, Preparation , the topologies and trajectories are generated, among other elements depending on the calculations, such as the mutants for the alanine or glycine scanning or the interaction residues during decomposition analysis. In the second part, Calculation , the binding free energies and/or entropies are estimated using the selected models. Finally, in the last step Analysis , the results can be analyzed by using the graphical user interface gmx_MMPBSA_ana . Figure 1: gmx_MMPBSA general workflow","title":"gmx_MMPBSA general workflow"},{"location":"howworks/#required-input-files","text":"Currently, gmx_MMPBSA supports two families of force fields: Amber and CHARMM. Although these force fileds are quite similar, the generation of topologies differs. When Amber force filed was used to prepare the system(s), the topologies compatible with AMBER package can be generated from either GROMACS topologies or structures. Meanwhile, when CHARMM force field is used, AMBER's topologies are generated from GROMACS topologies exclusively. (Table 1). Table 1: Required input files for every force field Force field Structure Index Trajectory Topology Reference Structure Small Molecule Mol2 AMBER tpr, gro, pdb ndx xtc, trr, pdb Optional Optional Only if not top CHARMM tpr, gro, pdb ndx xtc, trr, pdb Always Optional No","title":"Required input files"},{"location":"howworks/#topology-preparation","text":"In this section, we will go in deatil about each file and what they are used for. GROMACS files MD Structure+mass(db) (tpr, gro, pdb): This file is used to generate the structure in pdb format of the complex with editconf . We recommend using the *.tpr (production *.tpr) format. Index (ndx) This the file that contains the index of each element contained in the *.tpr file, organized as groups. This file is required for the definition of the groups corresponding to the receptor and the ligand. Trajectory (xtc, trr, pdb) Trajectory files. Topology (top) This file contains all the parameters corresponding to the force field selected during the system setup. When using a GROMACS topology, parmed is used for converting the topologies. This method can be useful when studying a complex system with many elements. However, its main strength (flexibility) is its main weakness. GROMACS can parameterize your system differently than AMBER, so the conversion can result in a topology with very dissimilar parameters that AMBER does not understand. If you use amber, you can consider whether to use this method or not. However, when using CHARMM (any version) force field, the topology is always required. Reference Structure It corresponds to a file in *.pdb format that must contain a complete structure. That is, the user must make sure that this structure contains the same number of atoms and residues as the complex that he initially defined, the correct residue numbering, as well as its chain ID. This structure is optional, but we recommend using it since it should guarantee a smooth processing of the files in gmx_MMPBSA . Essentially, the objective is to be able to correctly assign the mentioned parameters since internally gmx_MMPBSA handles sensitive information, for example: when it extracts the receptor and the ligand from the complex structure, the mutation in the alanine scan, etc. Small molecule parameters (mol2) This file contains a ligand parameterization with antechamber that is not found in the selected force field (Amber family). It is only necessary to define it when studying a system that contains this type of ligand, and a topology has not been defined. This is used to build amber topology from structure using tleap . Here are the steps that gmx_MMPBSA follows to generate the topologies: Specific steps for the topology are highlighted like this Generates a new index and registers the groups defined by the user Generates the pdb of the complex, receptor, and ligand Topologies are cleaned (remove water and ions) The structures or parameters for the receptor and the ligand are generated if it is a ST approximation. If Alanine scanning: the mutant of the complex, and the mutant receptor or ligand are generated If decomposition: interaction residues are extracted The complex is mapped. Registers the continuity of the receptor (example: Metalloprotein structure files are generally structured as follows: Receptor protein + Ligand + Receptor Ions) The PBRadii is assigned Topologies are converted with parmed or generated with tleap The following figure shows the process to generate AMBER topologies depending on the force field. Figure 2: Topology generation workflow for Single Trajectory Approximation","title":"Topology preparation"},{"location":"howworks/#analysis-with-gmx_mmpbsa-analyzer-tool-gmx_mmpbsa_ana","text":"gmx_MMPBSA_ana is very intuitive and easy to use. We will expand this section soon","title":"Analysis with gmx_MMPBSA analyzer tool (gmx_MMPBSA_ana)"},{"location":"information/","text":"Information \u00b6 Citing us \u00b6 Coming soon! Please also consider citing MMPBSA.py's paper: MMPBSA.py: An Efficient Program for End-State Free Energy Calculations . Bill R. Miller, T. Dwight McGee, Jason M. Swails, Nadine Homeyer, Holger Gohlke, and Adrian E. Roitberg. Journal of Chemical Theory and Computation , 2012 8 (9), 3314-3321. DOI: 10.1021/ct300418h Authors \u00b6 Mario Sergio Vald\u00e9s Tresanco, PhD Student University of Medellin, Colombia Mario Ernesto Vald\u00e9s Tresanco, PhD Student University of Calgary, Canada. Ernesto Moreno Fr\u00edas, PhD University of Medellin, Colombia Support \u00b6 Report an issue and Getting help \u00b6 You can review some of the answers to the questions that we consider most common here. If you find a bug or have any question, please consider opening an issue or post in our Google group Jetbrains \u00b6 This project is possible thanks to the Open Source license of the JetBrains programs.","title":"Information"},{"location":"information/#information","text":"","title":"Information"},{"location":"information/#citing-us","text":"Coming soon! Please also consider citing MMPBSA.py's paper: MMPBSA.py: An Efficient Program for End-State Free Energy Calculations . Bill R. Miller, T. Dwight McGee, Jason M. Swails, Nadine Homeyer, Holger Gohlke, and Adrian E. Roitberg. Journal of Chemical Theory and Computation , 2012 8 (9), 3314-3321. DOI: 10.1021/ct300418h","title":"Citing us"},{"location":"information/#authors","text":"Mario Sergio Vald\u00e9s Tresanco, PhD Student University of Medellin, Colombia Mario Ernesto Vald\u00e9s Tresanco, PhD Student University of Calgary, Canada. Ernesto Moreno Fr\u00edas, PhD University of Medellin, Colombia","title":"Authors"},{"location":"information/#support","text":"","title":"Support"},{"location":"information/#report-an-issue-and-getting-help","text":"You can review some of the answers to the questions that we consider most common here. If you find a bug or have any question, please consider opening an issue or post in our Google group","title":"Report an issue and Getting help"},{"location":"information/#jetbrains","text":"This project is possible thanks to the Open Source license of the JetBrains programs.","title":"Jetbrains"},{"location":"input_file/","text":"The input file \u00b6 Description \u00b6 As gmx_MMPBSA is based on MMPBSA.py , it uses an input file containing all the specification for the MM/PB(GB) SA calculation. The input file is designed to be as syntactically similar to other programs in Amber as possible. The input file has the same namelist structure as both sander and pmemd. The allowed namelists are &general , &gb , &pb , &rism , &alanine_scanning , &nmode , and &decomp . The input variables recognized in each namelist are described below, but those in &general are typically variables that apply to all aspects of the calculation or parameters required for build amber topologies from GROMACS files. The &gb namelist is unique to Generalized Born calculations, &pb is unique to Poisson Boltzmann calculations, &rism is unique to 3D-RISM calculations, &alanine_scanning is unique to alanine scanning calculations, &nmode is unique to the normal mode calculations used to approximate vibrational entropies, and &decomp is unique to the decomposition scheme. All of the input variables are described below according to their respective namelists. Integers and floating point variables should be typed as-is while strings should be put in either single- or double-quotes. All variables should be set with variable = value and separated by commas. See several examples below. As you will see, several calculations can be performed in the same run ( i.e. &gb and &pb , &gb and &alanine_scanning , &pb and &decomp , etc). Variables will usually be matched to the minimum number of characters required to uniquely identify that variable within that namelist. Variables require at least 4 characters to be matched unless that variable name has fewer than 4 characters (in which case the whole variable name is required). For example, \"star\" in &general will match startframe . However, \"stare\" and \"sta\" will match nothing. &general namelist variables \u00b6 assign_chainID Defines the chains ID assignment mode. It is ignored when defining a reference structure (recommended) . If assign_chainID = 1 , gmx_MMPBSA check if the structure has no chains ID and it is assigned according to the structure 1 . If assign_chainID = 2 , gmx_MMPBSA re-assign the chains ID, exist or not, according to the structure 1 (can generate inconsistencies). If a *.gro file was used for complex structure ( -cs flag) and not reference structure was provided, gmx_MMPBSA assume assign_chainID = 1 . (Default = 0) debug_printlevel MMPBSA.py prints errors by raising exceptions, and not catching fatal errors. If debug_printlevel is set to 0, then detailed tracebacks (effectively the call stack showing exactly where in the program the error occurred) is suppressed, so only the error message is printed. If debug_printlevel is set to 1 or higher, all tracebacks are printed, which aids in debugging of issues. (Default = 0) (Advanced Option) Tip Now gmx_MMPBSA shows the command-line used to build AMBER topologies when debug_printlevel = 1 or higher . startframe (Default = 1) The frame from which to begin extracting snapshots from the full, concatenated trajectory comprised of every trajectory file placed on the command-line. This is always the first frame read. endframe (Default = 9999999) The frame from which to stop extracting snapshots from the full, concatenated trajectory comprised of every trajectory file supplied on the command-line. entropy (default = 0) It specifies whether to perform a quasi-harmonic entropy (QH) approximation with ptraj or the Interaction Entropy (IE) approximation. The allowed values are: 0: Don\u2019t 1: perform QH 2: perform IE Improvement Included Interaction entropy aproximation. entropy_seg (Default = 25) Specify the representative segment (in %), starting from the endframe , for the calculation of the Interaction Entropy, e.g. : entropy_seg = 25 means that the last quartile of the total number of frames ( (endframe-startframe)/interval ) will be used to calculate the average Interaction Entropy. (Only if entropy = 2 ) entropy_temp (Default = 298.15) Specify the temperature to calculate the entropy term \u2212T\u0394S (Only if entropy = 2). Avoid inconsistencies with defined internal temperature (298.15 K) when nmode is used. gmx_path Define an additional path to search for GROMACS executables. This path takes precedence over the path defined in the PATH variable. In these path the following executables will be searched: gmx , gmx_mpi , gmx_d , gmx_mpi_d (Gromcas > 5.x.x), make_ndx , editconf and trjconv (GROMACS 4.x.x) interval (Default = 1) The offset from which to choose frames from each trajectory file. For example, an interval of 2 will pull every 2 nd frame beginning at startframe and ending less than or equal to endframe. netcdf (Default = 0) Specifies whether or not to use NetCDF trajectories internally rather than writing temporary ASCII trajectory files. For very large trajectories, this could offer significant speedups, and requires less temporary space. However, this option is incompatible with alanine scanning. 0: Do NOT use temporary NetCDF trajectories 1: Use temporary NetCDF trajectories overwrite_data (Default = 0) Defines whether the gmxMMPBSA data will be overwritten. gmx_MMPBSA detects if the gmxMMPBSA data files exist before copying them. This option allows the user to control the copy process and prevents the system from being overloaded by copying files unnecessarily. 0: don't 1: overwrite gxmMMPBSA data if exist Tip We recommend activating this option with each new release because there may be changes and/or corrections in the gmxMMPBSA data files. PBRadii (Default = 3) PBRadii to build amber topology files: 1: bondi, recommended when igb = 7 2: mbondi, recommended when igb = 1 3: mbondi2, recommended when igb = 2 or 5 4: mbondi3, recommended when igb = 8 protein_forcefield (Default = \"oldff/leaprc.ff99SB\") Define the force field used to build Amber topology for proteins. Make sure this force field is the same as the one used in GROMACS. Force fields tested: \"oldff/leaprc.ff99\" \"oldff/leaprc.ff03\" \"oldff/leaprc.ff99SB\" \"oldff/leaprc.ff99SBildn\" \"leaprc.protein.ff14SB\" Keep in mind You don't need to define it when you use a topology. Please refer to the section \"How gmx_MMPBSA works\" This notation format is the one used in tleap. ligand_forcefield (Default = \"leaprc.gaff\") Define the force field used to build Amber topology for small molecules or glycams. Make sure this force field is the same as the one used for GROMACS . Force fields tested: \"leaprc.gaff\" \"leaprc.gaff2\" \"leaprc.GLYCAM_06j-1\" (Compatible with amber12SB and later) \"leaprc.GLYCAM_06EPb\" (Compatible with amber12SB and later) \"gmxMMPBSA/leaprc.GLYCAM_06h-1\" * (Included in gmx_MMPBSA package. Compatible with amber99SB and earlier) \"gmxMMPBSA/leaprc.zaa99SB\" * Parameters for Zwitterionic amino acids. (Included in gmx_MMPBSA package. Compatible with amber 99SB) Keep in mind You don't need to define it when you use a topology or the ligand is protein-like type. Please refer to the section \"How gmx_MMPBSA works\" This notation format is the one used in tleap. * We create a new folder (named gmxMMPBSA ) in each one of the Amber's parameter folders ($AMBERHOME/dat/leap/[cmd, prep, lib, parm]/gmxMMPBSA). This way, we keep gmx_MMPBSA data separated from Amber's. ions_parameters (Default = 1) Define ions parameters to build the Amber topology. 1: frcmod.ions234lm_126_tip3p 2: frcmod.ions234lm_iod_tip4pew 3: frcmod.ions234lm_iod_spce 4: frcmod.ions234lm_hfe_spce 5: frcmod.ions234lm_126_tip4pew 6: frcmod.ions234lm_126_spce 7: frcmod.ions234lm_1264_tip4pew 8: frcmod.ions234lm_1264_tip3p 9: frcmod.ions234lm_1264_spce 10: frcmod.ions234lm_iod_tip3p 11: frcmod.ions234lm_hfe_tip4pew 12: frcmod.ions234lm_hfe_tip3p Keep in mind You don't need to define it when you use a topology. Please refer to the section \"How gmx_MMPBSA works\" This notation is simpler since these parameter files are generally the same for all systems reuse_files (Default = 0) Define whether the trajectories files will be reused when the program ends in error. 0: Don't reuse. If there are temporary trajectory files, they will be deleted 1: Reuse existing trajectory file Danger Note that the trajectories files may not be generated correctly due to internal errors or interruptions. Please use it with care. solvated_trajectory (Default = 1) Define if it is necessary to build a clean trajectory with no water and ions 0: Don\u2019t 1: Build clean trajectory use_sander (Default = 0) use sander for energy calculations, even when mmpbsa_py_energy will suffice 0: Use mmpbsa_py_energy when possible 1: Always use sander Note Sander is always used when building the Amber topology from a Gromacs topology. This, because the conversion can generate parameters that are not recognized by mmpbsa_py_energy verbose (Default = 1) The variable that specifies how much output is printed in the output file. There are three allowed values: 0: print difference terms 1: print all complex, receptor, and ligand terms 2: also print bonded terms if one trajectory is used &gb namelist variables \u00b6 ifqnt (Default = 0) Specifies whether a part of the system is treated with quantum mechanics. 1: Use QM/MM 0: Potential function is strictly classical Note This functionality requires sander igb (Default = 5) Generalized Born method to use (seeSection 4). Allowed values are 1, 2, 5, 7 and 8 Note All models are now available with both mmpbsa_py_energy and sander qm_residues Comma- or semicolon-delimited list of complex residues to treat with quantum mechanics. All whitespace is ignored. All residues treated with quantum mechanics in the complex must be treated with quantum mechanics in the receptor or ligand to obtain meaningful results. intdiel (Default = 1.0) Define Internal dielectric constant without use external *.mdin file qm_theory Which semi-empirical Hamiltonian should be used for the quantum calculation. See its description in the QM/MM section of the manual for options. Danger No default, this must be specified. qmcharge_com (Default = 0) The charge of the quantum section for the complex. qmcharge_lig (Default = 0) The charge of the quantum section of the ligand. qmcharge_rec (Default = 0) The charge of the quantum section for the receptor. qmcut (Default = 9999.0) The cutoff for the qm/mm charge interactions. saltcon (Default = 0.0) Salt concentration in Molarity. surfoff (Default 0.0) Offset to correct (by addition) the value of the non-polar contribution to the solvation free energy term surften (Default = 0.0072) Surface tension value. Units in kcal/mol/\u00c5 2 molsurf (Default 0) Define the algorithm to calculate the surface area for the nonpolar solvation termWhen 0: LCPO (Linear Combination of Pairwise Overlaps) 1: molsurf algorithm probe (Default = 1.4) Radius of the probe molecule (supposed to be the size of a solvent molecule), in Angstroms, to use when determining the molecular surface. Note only applicable when molsurf is set to 1 msoffset (Default = 0) Offset to apply to the individual atomic radii in the system when calculating the molsurf surface. See the description of the molsurf action command in cpptraj . &pb namelist variables \u00b6 inp (Default = 2) Option to select different methods to compute non-polar solvation free energy. 0: No non-polar solvation free energy is computed 1: The total non-polar solvation free energy is modeled as a single term linearly proportional to the solvent accessible surface area, as in the PARSE parameter set, that is, if INP = 1, USE_SAV must be equal to 0. 2: The total non-polar solvation free energy is modeled as two terms: the cavity term and the dispersion term. The dispersion term is computed with a surface-based integration method closely related to the PCM solvent for quantum chemical programs. Under this framework, the cavity term is still computed as a term linearly proportional to the molecular solvent-accessible-surface area (SASA) or the molecular volume enclosed by SASA. cavity_offset (Default = -0.5692) Offset value used to correct non-polar free energy contribution. Note This is not used for APBS . cavity_surften (Default = 0.0378 [ kcal/mol \u00c5 2 ] ) Surface tension. Unit conversion to kJ done automatically for APBS . exdi (Default = 80.0) External dielectric constant. indi (Default = 1.0) Internal dielectric constant. fillratio (Default = 4.0) The ratio between the longest dimension of the rectangular finite-difference grid and that of the solute. scale (Default = 2.0) Resolution of the Poisson Boltzmann grid. It is equal to the reciprocal of the grid spacing. istrng (Default = 0.0) Ionic strength in Molarity. It is converted to mM for PBSA and kept as M for APBS . linit (Default = 1000) Maximum number of iterations of the linear Poisson Boltzmann equation to try prbrad (Default = 1.4) Solvent probe radius in Angstroms. Allowed values are 1.4 and 1.6 radiopt (Default = 1) The option to set up atomic radii according to: 0: the prmtop, or 1: pre-computed values Warning radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP. Check this thread and See Amber manual for more complete description. sander_apbs (Default = 0) Option to use APBS for PB calculation instead of the built-in PBSA solver. This will work only through the iAPBS interface built into sander.APBS . Instructions for this can be found online at the iAPBS/APBS websites. 0: Don\u2019t use APBS 1: Use sander.APBS memopt (Default = 0) Turn on membrane protein support. emem (Default = 1.0) Membrane dielectric constant. mthick (Default = 40.0) Membrane thickness. mctrdz (Default=0.0, use protein center as the membrane center) Absolute membrane center in the z-direction. poretype (Default=1) Turn on the automatic membrane channel/pore finding method. Note A more thorough description of these and other options can be found here . Please also note that the default options have changed over time. For a detailed discussion of all related options on the quality of the MM/PB(GB)SA calculations, please check this publication . &alanine_scanning namelist variables \u00b6 mutant_only (Default = 0) Option to perform specified calculations only for the mutants. 0: Do mutant and original 1: Do mutant only Note Note that all calculation details are controlled in the other namelists, though for alanine scanning to be performed, the namelist must be included (blank if desired) mutant (Default = \"ALA\") Defines the residue by which it is going to mutate. Note Allowed values are: \"ALA\" or \"A\" for Alanine scanning and \"GLY\" or \"G\" for Glycine scanning. mutant_res Define the specific residue that is going to be mutated. Use the following format CHAIN:RESNUM (eg: 'A: 350'). Important We recommend using the reference structure (-cr) to ensure the perfect match between the selected residue in the defined structure or topology This option allow gmx_MMPBSA to do the mutation. This way the user does not have to provide the mutant topology &nmode namelist variables \u00b6 dielc (Default = 1.0) Distance-dependent dielectric constant drms (Default = 0.001) Convergence criteria for minimized energy gradient. maxcyc (Default = 10000) Maximum number of minimization cycles to use per snapshot in sander. nminterval 2 (Default = 1) Offset from which to choose frames to perform nmode calculations on nmendframe 2 (Default = 1000000) Frame number to stop performing nmode calculations on nmode_igb (Default = 1) Value for Generalized Born model to be used in calculations. Options are: 0: Vacuum 1: HCT GB model nmode_istrng (Default = 0.0) Ionic strength to use in nmode calculations. Units are Molarity. Non-zero values are ignored if nmode_igb is 0 above. nmstartframe 2 Frame number to begin performing nmode calculations on &decomp namelist variables \u00b6 csv_format (Default = 1 [CSV-formatted output file]) Print the decomposition output in a Comma-Separated-Variable (CSV) file. CSV files open natively in most spreadsheets. * If set to 1, this variable will cause the data to be written out in a CSV file, and standard error of the mean will be calculated and included for all data. * If set to 0, the standard, ASCII format will be used for the output file. dec_verbose (Default = 0) Set the level of output to print in the decomp_output file. 0: DELTA energy, total contribution only 1: DELTA energy, total, sidechain, and backbone contributions 2: Complex, Receptor, Ligand, and DELTA energies, total contribution only 3: Complex, Receptor, Ligand, and DELTA energies, total, sidechain, and backbone contributions Note If the values 0 or 2 are chosen, only the Total contributions are required, so only those will be printed to the mdout files to cut down on the size of the mdout files and the time required to parse them. idecomp Energy decomposition scheme to use: 1: Per-residue decomp with 1-4 terms added to internal potential terms 2: Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms. 3: Pairwise decomp with 1-4 terms added to internal potential terms 4: Pairwise decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms Warning No default. This must be specified!. This functionality requires sander. print_res (Default = \"within 6\") Select residues from the complex to print. This variable also accepts a sequence of individual residues and/or ranges. The different fields must be either comma- or semicolon-delimited. For example: print_res = \"within 6\", where within corresponds to the keyword and 6 to the maximum distance criterion in Angstroms necessary to select the residues from both the receptor and the ligand; or print_res = \"1,3-10, 15, 100\", or print_res = \"1; 3-10; 15; 100\". Both of these will print residues 1, 3 through 10, 15, and 100 from the complex topology file and the corresponding residues in either the ligand and/or receptor topology files. Warning Using idecomp=3 or 4 (pairwise) with a very large number of printed residues and a large number of frames can quickly create very, very large temporary mdout files. Large print selections also demand a large amount of memory to parse the mdout files and write decomposition output file (~500 MB for just 250 residues, since that\u2019s 62500 pairs!) It is not unusual for the output file to take a significant amount of time to print if you have a lot of data. This is most applicable to pairwise decomp, since the amount of data scales as O(N 2 ). Check Based on the above, we decided to add a new option that limits the selection of the residues that will be printed by default. The new option (within 6) considerably reduces the number of residues to be printed reducing the computational cost. Additionally, it selects the interaction interface residues (according to the selected value) automatically, without the user needing to define them explicitly. &rism namelist variables \u00b6 Warning 3D-RISM calculations are performed with the rism3d.snglpnt program built with AmberTools, written by Tyler Luchko. It is the most expensive, yet most statistical mechanically rigorous solvation model available in MMPBSA.py . See Chapter 7 for a more thorough description of options and theory. A list of references can be found there, too. One advantage of 3D-RISM is that an arbitrary solvent can be chosen; you just need to change the xvvfile specified on the command line (see 34.3.2 ). buffer (Default = 14 \u00c5) Minimum distance between solute and edge of solvation box. Specify this with grdspc below. Mutually exclusive with ng and solvbox. Set buffer < 0 if you wish to use ng and solvbox . closure (Default = \"kh\") The approximation to the closure relation. Allowed choices are kh (Kovalenko-Hirata), hnc (Hypernetted- chain), or psen (Partial Series Expansion of order-n) where \"n\" is a positive integer ( e.g. , \"pse3\"). Deprecated closureorder (Default = 1) The order at which the PSE-n closure is truncated if closure is specified as \"pse\" or \"psen\" (no integers). grdspc (Default = 0.5 \u00c5) Grid spacing of the solvation box. Specify this with buffer above. Mutually exclusive with ng and solvbox . ng Number of grid points to use in the x, y, and z directions. Used only if buffer < 0. Mutually exclusive with buffer and grdspc above, and paired with solvbox below. Warning No default, this must be set if buffer < 0. Define like \"ng=1000,1000,1000\" polardecomp (Default = 0) Decompose the solvation free energy into polar and non-polar contributions. Note that this will increase computation time by roughly 80%. 0: Don\u2019t decompose solvation free energy. 1: Decompose solvation free energy. rism_verbose (Default = 0) Level of output in temporary RISM output files. May be helpful for debugging or following convergence. 0: just print the final result 1: additionally prints the total number of iterations for each solution 2: additionally prints the residual for each iteration and details of the MDIIS solver solvbox Length of the solvation box in the x, y, and z dimensions. Used only if buffer < 0. Mutually exclusive with buffer and grdspc above, and paired with ng above. Warining No default, this must be set if buffer < 0. Define like \"solvbox=20,20,20\" solvcut (Default = buffer ) Cutoff used for solute-solvent interactions. The default is the value of buffer. Therefore, if you set buffer < 0 and specify ng and solvbox instead, you must set solvcut to a nonzero value, or the program will quit in error. thermo (Default = \"std\") Which thermodynamic equation you want to use to calculate solvation properties. Options are \"std\", \"gf\", or \"both\" (case-INsensitive). \"std\" uses the standard closure relation, \"gf\" uses the Gaussian Fluctuation approximation,and \"both\" will print out separate sections for both. . Note Note that all data are printed out for each RISM simulation, so no choice is any more computationally demanding than another. Also, you can change this option and use the -rewrite-output flag to obtain a different printout after-the-fact. tolerance (Default = 1e-5) Upper bound of the precision requirement used to determine convergence of the self-consistent solution. This has a strong effect on the cost of 3D-RISM calculations. Sample input files \u00b6 Tip You can refer to the examples to understand the input file in a practical way. GB and PB \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB and PB calculation building the Amber topologies from structures. Please refer to the section \"How gmx_MMPBSA works\" &general startframe=5, endframe=100, interval=5, verbose=2, protein_forcefield=\"oldff/leaprc.ff99SB\", ligand_forcefield=\"leaprc.gaff\" / &gb igb=5, saltcon=0.150, / &pb istrng=0.15, fillratio=4.0 / Alanine scanning \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for Alanine scanning &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / &alanine_scanning mutant='ALA' mutant_res='B:12' / Entropy \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Sample input file for entropy calculations &general startframe=5, endframe=21, verbose=2, interval=1, # `entropy` variable control whether to perform a quasi-harmonic entropy (QH) # approximation or the Interaction Entropy (IE) # (https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation protein_forcefield=\"oldff/leaprc.ff99SB\", entropy=2, entropy_seg=25, entropy_temp=298 / &gb igb=2, saltcon=0.150, / uncomment the next 4 lines for normal mode calculations #&nmode #nmstartframe=5, nmendframe=21, nminterval=2, #maxcyc=50000, drms=0.0001, #/ Decomposition analysis \u00b6 Sample input file with decomposition analysis Make sure to include at least one residue from both the receptor and ligand in the print_res mask of the &decomp section. http://archive.ambermd.org/201308/0075.html &general startframe=5, endframe=21, interval=1, / &gb igb=5, saltcon=0.150, / &decomp idecomp=2, dec_verbose=3, # This will print all residues that are less than 4 angstroms between # the receptor and the ligand print_res=\"within 4\" / QM/MMGBSA \u00b6 Sample input file for QM/MMGBSA &general startframe=5, endframe=100, interval=5, / &gb igb=5, saltcon=0.100, ifqnt=1, qmcharge_com=0, qm_residues=\"100-105, 200\", qm_theory=\"PM3\" / MM/3D-RISM \u00b6 Sample input file for MM/3D-RISM &general startframe=20, endframe=100, interval=5, / &rism polardecomp=1, thermo=\"gf\" / MMPBSA with membrane proteins \u00b6 Sample input file for MMPBSA with membrane proteins &general startframe=1, endframe=100, interval=1, debug_printlevel=2, use_sander=1, / &pb radiopt=0, indi=20.0, istrng=0.150, fillratio=1.25, ipb=1, nfocus=1, bcopt=10, eneopt=1, cutfd=7.0, cutnb=99.0, npbverb=1, solvopt=2, inp=2, memopt=1, emem=7.0, mctrdz=-10.383, mthick=36.086, poretype=1, maxarcdot=15000 / Info Comments are allowed by placing a # at the beginning of the line (whites-space are ignored). Variable initialization may span multiple lines. In-line comments ( i.e. , putting a # for a comment after a variable is initialized in the same line) is not allowed and will result in an input error. Variable declarations must be comma-delimited, though all whitespace is ignored. Finally, all lines between namelists are ignored, so comments can be added before each namelist without using #. The chain ID is assigned according to two criteria: terminal amino acids and residue numbering . If both criteria or residue numbering changes are present, we assign a new chain ID. If there are terminal amino acids but the numbering of the residue continues, we do not change the ID of the chain. \u21a9 \u21a9 These variables will choose a subset of the frames chosen from the variables in the &general namelist. Thus, the \"trajectory\" from which snapshots will be chosen for nmode calculations will be the collection of snapshots upon which the other calculations were performed. \u21a9 \u21a9 \u21a9","title":"The input file"},{"location":"input_file/#the-input-file","text":"","title":"The input file"},{"location":"input_file/#description","text":"As gmx_MMPBSA is based on MMPBSA.py , it uses an input file containing all the specification for the MM/PB(GB) SA calculation. The input file is designed to be as syntactically similar to other programs in Amber as possible. The input file has the same namelist structure as both sander and pmemd. The allowed namelists are &general , &gb , &pb , &rism , &alanine_scanning , &nmode , and &decomp . The input variables recognized in each namelist are described below, but those in &general are typically variables that apply to all aspects of the calculation or parameters required for build amber topologies from GROMACS files. The &gb namelist is unique to Generalized Born calculations, &pb is unique to Poisson Boltzmann calculations, &rism is unique to 3D-RISM calculations, &alanine_scanning is unique to alanine scanning calculations, &nmode is unique to the normal mode calculations used to approximate vibrational entropies, and &decomp is unique to the decomposition scheme. All of the input variables are described below according to their respective namelists. Integers and floating point variables should be typed as-is while strings should be put in either single- or double-quotes. All variables should be set with variable = value and separated by commas. See several examples below. As you will see, several calculations can be performed in the same run ( i.e. &gb and &pb , &gb and &alanine_scanning , &pb and &decomp , etc). Variables will usually be matched to the minimum number of characters required to uniquely identify that variable within that namelist. Variables require at least 4 characters to be matched unless that variable name has fewer than 4 characters (in which case the whole variable name is required). For example, \"star\" in &general will match startframe . However, \"stare\" and \"sta\" will match nothing.","title":"Description"},{"location":"input_file/#general-namelist-variables","text":"assign_chainID Defines the chains ID assignment mode. It is ignored when defining a reference structure (recommended) . If assign_chainID = 1 , gmx_MMPBSA check if the structure has no chains ID and it is assigned according to the structure 1 . If assign_chainID = 2 , gmx_MMPBSA re-assign the chains ID, exist or not, according to the structure 1 (can generate inconsistencies). If a *.gro file was used for complex structure ( -cs flag) and not reference structure was provided, gmx_MMPBSA assume assign_chainID = 1 . (Default = 0) debug_printlevel MMPBSA.py prints errors by raising exceptions, and not catching fatal errors. If debug_printlevel is set to 0, then detailed tracebacks (effectively the call stack showing exactly where in the program the error occurred) is suppressed, so only the error message is printed. If debug_printlevel is set to 1 or higher, all tracebacks are printed, which aids in debugging of issues. (Default = 0) (Advanced Option) Tip Now gmx_MMPBSA shows the command-line used to build AMBER topologies when debug_printlevel = 1 or higher . startframe (Default = 1) The frame from which to begin extracting snapshots from the full, concatenated trajectory comprised of every trajectory file placed on the command-line. This is always the first frame read. endframe (Default = 9999999) The frame from which to stop extracting snapshots from the full, concatenated trajectory comprised of every trajectory file supplied on the command-line. entropy (default = 0) It specifies whether to perform a quasi-harmonic entropy (QH) approximation with ptraj or the Interaction Entropy (IE) approximation. The allowed values are: 0: Don\u2019t 1: perform QH 2: perform IE Improvement Included Interaction entropy aproximation. entropy_seg (Default = 25) Specify the representative segment (in %), starting from the endframe , for the calculation of the Interaction Entropy, e.g. : entropy_seg = 25 means that the last quartile of the total number of frames ( (endframe-startframe)/interval ) will be used to calculate the average Interaction Entropy. (Only if entropy = 2 ) entropy_temp (Default = 298.15) Specify the temperature to calculate the entropy term \u2212T\u0394S (Only if entropy = 2). Avoid inconsistencies with defined internal temperature (298.15 K) when nmode is used. gmx_path Define an additional path to search for GROMACS executables. This path takes precedence over the path defined in the PATH variable. In these path the following executables will be searched: gmx , gmx_mpi , gmx_d , gmx_mpi_d (Gromcas > 5.x.x), make_ndx , editconf and trjconv (GROMACS 4.x.x) interval (Default = 1) The offset from which to choose frames from each trajectory file. For example, an interval of 2 will pull every 2 nd frame beginning at startframe and ending less than or equal to endframe. netcdf (Default = 0) Specifies whether or not to use NetCDF trajectories internally rather than writing temporary ASCII trajectory files. For very large trajectories, this could offer significant speedups, and requires less temporary space. However, this option is incompatible with alanine scanning. 0: Do NOT use temporary NetCDF trajectories 1: Use temporary NetCDF trajectories overwrite_data (Default = 0) Defines whether the gmxMMPBSA data will be overwritten. gmx_MMPBSA detects if the gmxMMPBSA data files exist before copying them. This option allows the user to control the copy process and prevents the system from being overloaded by copying files unnecessarily. 0: don't 1: overwrite gxmMMPBSA data if exist Tip We recommend activating this option with each new release because there may be changes and/or corrections in the gmxMMPBSA data files. PBRadii (Default = 3) PBRadii to build amber topology files: 1: bondi, recommended when igb = 7 2: mbondi, recommended when igb = 1 3: mbondi2, recommended when igb = 2 or 5 4: mbondi3, recommended when igb = 8 protein_forcefield (Default = \"oldff/leaprc.ff99SB\") Define the force field used to build Amber topology for proteins. Make sure this force field is the same as the one used in GROMACS. Force fields tested: \"oldff/leaprc.ff99\" \"oldff/leaprc.ff03\" \"oldff/leaprc.ff99SB\" \"oldff/leaprc.ff99SBildn\" \"leaprc.protein.ff14SB\" Keep in mind You don't need to define it when you use a topology. Please refer to the section \"How gmx_MMPBSA works\" This notation format is the one used in tleap. ligand_forcefield (Default = \"leaprc.gaff\") Define the force field used to build Amber topology for small molecules or glycams. Make sure this force field is the same as the one used for GROMACS . Force fields tested: \"leaprc.gaff\" \"leaprc.gaff2\" \"leaprc.GLYCAM_06j-1\" (Compatible with amber12SB and later) \"leaprc.GLYCAM_06EPb\" (Compatible with amber12SB and later) \"gmxMMPBSA/leaprc.GLYCAM_06h-1\" * (Included in gmx_MMPBSA package. Compatible with amber99SB and earlier) \"gmxMMPBSA/leaprc.zaa99SB\" * Parameters for Zwitterionic amino acids. (Included in gmx_MMPBSA package. Compatible with amber 99SB) Keep in mind You don't need to define it when you use a topology or the ligand is protein-like type. Please refer to the section \"How gmx_MMPBSA works\" This notation format is the one used in tleap. * We create a new folder (named gmxMMPBSA ) in each one of the Amber's parameter folders ($AMBERHOME/dat/leap/[cmd, prep, lib, parm]/gmxMMPBSA). This way, we keep gmx_MMPBSA data separated from Amber's. ions_parameters (Default = 1) Define ions parameters to build the Amber topology. 1: frcmod.ions234lm_126_tip3p 2: frcmod.ions234lm_iod_tip4pew 3: frcmod.ions234lm_iod_spce 4: frcmod.ions234lm_hfe_spce 5: frcmod.ions234lm_126_tip4pew 6: frcmod.ions234lm_126_spce 7: frcmod.ions234lm_1264_tip4pew 8: frcmod.ions234lm_1264_tip3p 9: frcmod.ions234lm_1264_spce 10: frcmod.ions234lm_iod_tip3p 11: frcmod.ions234lm_hfe_tip4pew 12: frcmod.ions234lm_hfe_tip3p Keep in mind You don't need to define it when you use a topology. Please refer to the section \"How gmx_MMPBSA works\" This notation is simpler since these parameter files are generally the same for all systems reuse_files (Default = 0) Define whether the trajectories files will be reused when the program ends in error. 0: Don't reuse. If there are temporary trajectory files, they will be deleted 1: Reuse existing trajectory file Danger Note that the trajectories files may not be generated correctly due to internal errors or interruptions. Please use it with care. solvated_trajectory (Default = 1) Define if it is necessary to build a clean trajectory with no water and ions 0: Don\u2019t 1: Build clean trajectory use_sander (Default = 0) use sander for energy calculations, even when mmpbsa_py_energy will suffice 0: Use mmpbsa_py_energy when possible 1: Always use sander Note Sander is always used when building the Amber topology from a Gromacs topology. This, because the conversion can generate parameters that are not recognized by mmpbsa_py_energy verbose (Default = 1) The variable that specifies how much output is printed in the output file. There are three allowed values: 0: print difference terms 1: print all complex, receptor, and ligand terms 2: also print bonded terms if one trajectory is used","title":"&amp;general namelist variables"},{"location":"input_file/#gb-namelist-variables","text":"ifqnt (Default = 0) Specifies whether a part of the system is treated with quantum mechanics. 1: Use QM/MM 0: Potential function is strictly classical Note This functionality requires sander igb (Default = 5) Generalized Born method to use (seeSection 4). Allowed values are 1, 2, 5, 7 and 8 Note All models are now available with both mmpbsa_py_energy and sander qm_residues Comma- or semicolon-delimited list of complex residues to treat with quantum mechanics. All whitespace is ignored. All residues treated with quantum mechanics in the complex must be treated with quantum mechanics in the receptor or ligand to obtain meaningful results. intdiel (Default = 1.0) Define Internal dielectric constant without use external *.mdin file qm_theory Which semi-empirical Hamiltonian should be used for the quantum calculation. See its description in the QM/MM section of the manual for options. Danger No default, this must be specified. qmcharge_com (Default = 0) The charge of the quantum section for the complex. qmcharge_lig (Default = 0) The charge of the quantum section of the ligand. qmcharge_rec (Default = 0) The charge of the quantum section for the receptor. qmcut (Default = 9999.0) The cutoff for the qm/mm charge interactions. saltcon (Default = 0.0) Salt concentration in Molarity. surfoff (Default 0.0) Offset to correct (by addition) the value of the non-polar contribution to the solvation free energy term surften (Default = 0.0072) Surface tension value. Units in kcal/mol/\u00c5 2 molsurf (Default 0) Define the algorithm to calculate the surface area for the nonpolar solvation termWhen 0: LCPO (Linear Combination of Pairwise Overlaps) 1: molsurf algorithm probe (Default = 1.4) Radius of the probe molecule (supposed to be the size of a solvent molecule), in Angstroms, to use when determining the molecular surface. Note only applicable when molsurf is set to 1 msoffset (Default = 0) Offset to apply to the individual atomic radii in the system when calculating the molsurf surface. See the description of the molsurf action command in cpptraj .","title":"&amp;gb namelist variables"},{"location":"input_file/#pb-namelist-variables","text":"inp (Default = 2) Option to select different methods to compute non-polar solvation free energy. 0: No non-polar solvation free energy is computed 1: The total non-polar solvation free energy is modeled as a single term linearly proportional to the solvent accessible surface area, as in the PARSE parameter set, that is, if INP = 1, USE_SAV must be equal to 0. 2: The total non-polar solvation free energy is modeled as two terms: the cavity term and the dispersion term. The dispersion term is computed with a surface-based integration method closely related to the PCM solvent for quantum chemical programs. Under this framework, the cavity term is still computed as a term linearly proportional to the molecular solvent-accessible-surface area (SASA) or the molecular volume enclosed by SASA. cavity_offset (Default = -0.5692) Offset value used to correct non-polar free energy contribution. Note This is not used for APBS . cavity_surften (Default = 0.0378 [ kcal/mol \u00c5 2 ] ) Surface tension. Unit conversion to kJ done automatically for APBS . exdi (Default = 80.0) External dielectric constant. indi (Default = 1.0) Internal dielectric constant. fillratio (Default = 4.0) The ratio between the longest dimension of the rectangular finite-difference grid and that of the solute. scale (Default = 2.0) Resolution of the Poisson Boltzmann grid. It is equal to the reciprocal of the grid spacing. istrng (Default = 0.0) Ionic strength in Molarity. It is converted to mM for PBSA and kept as M for APBS . linit (Default = 1000) Maximum number of iterations of the linear Poisson Boltzmann equation to try prbrad (Default = 1.4) Solvent probe radius in Angstroms. Allowed values are 1.4 and 1.6 radiopt (Default = 1) The option to set up atomic radii according to: 0: the prmtop, or 1: pre-computed values Warning radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP. Check this thread and See Amber manual for more complete description. sander_apbs (Default = 0) Option to use APBS for PB calculation instead of the built-in PBSA solver. This will work only through the iAPBS interface built into sander.APBS . Instructions for this can be found online at the iAPBS/APBS websites. 0: Don\u2019t use APBS 1: Use sander.APBS memopt (Default = 0) Turn on membrane protein support. emem (Default = 1.0) Membrane dielectric constant. mthick (Default = 40.0) Membrane thickness. mctrdz (Default=0.0, use protein center as the membrane center) Absolute membrane center in the z-direction. poretype (Default=1) Turn on the automatic membrane channel/pore finding method. Note A more thorough description of these and other options can be found here . Please also note that the default options have changed over time. For a detailed discussion of all related options on the quality of the MM/PB(GB)SA calculations, please check this publication .","title":"&amp;pb namelist variables"},{"location":"input_file/#alanine_scanning-namelist-variables","text":"mutant_only (Default = 0) Option to perform specified calculations only for the mutants. 0: Do mutant and original 1: Do mutant only Note Note that all calculation details are controlled in the other namelists, though for alanine scanning to be performed, the namelist must be included (blank if desired) mutant (Default = \"ALA\") Defines the residue by which it is going to mutate. Note Allowed values are: \"ALA\" or \"A\" for Alanine scanning and \"GLY\" or \"G\" for Glycine scanning. mutant_res Define the specific residue that is going to be mutated. Use the following format CHAIN:RESNUM (eg: 'A: 350'). Important We recommend using the reference structure (-cr) to ensure the perfect match between the selected residue in the defined structure or topology This option allow gmx_MMPBSA to do the mutation. This way the user does not have to provide the mutant topology","title":"&amp;alanine_scanning namelist variables"},{"location":"input_file/#nmode-namelist-variables","text":"dielc (Default = 1.0) Distance-dependent dielectric constant drms (Default = 0.001) Convergence criteria for minimized energy gradient. maxcyc (Default = 10000) Maximum number of minimization cycles to use per snapshot in sander. nminterval 2 (Default = 1) Offset from which to choose frames to perform nmode calculations on nmendframe 2 (Default = 1000000) Frame number to stop performing nmode calculations on nmode_igb (Default = 1) Value for Generalized Born model to be used in calculations. Options are: 0: Vacuum 1: HCT GB model nmode_istrng (Default = 0.0) Ionic strength to use in nmode calculations. Units are Molarity. Non-zero values are ignored if nmode_igb is 0 above. nmstartframe 2 Frame number to begin performing nmode calculations on","title":"&amp;nmode namelist variables"},{"location":"input_file/#decomp-namelist-variables","text":"csv_format (Default = 1 [CSV-formatted output file]) Print the decomposition output in a Comma-Separated-Variable (CSV) file. CSV files open natively in most spreadsheets. * If set to 1, this variable will cause the data to be written out in a CSV file, and standard error of the mean will be calculated and included for all data. * If set to 0, the standard, ASCII format will be used for the output file. dec_verbose (Default = 0) Set the level of output to print in the decomp_output file. 0: DELTA energy, total contribution only 1: DELTA energy, total, sidechain, and backbone contributions 2: Complex, Receptor, Ligand, and DELTA energies, total contribution only 3: Complex, Receptor, Ligand, and DELTA energies, total, sidechain, and backbone contributions Note If the values 0 or 2 are chosen, only the Total contributions are required, so only those will be printed to the mdout files to cut down on the size of the mdout files and the time required to parse them. idecomp Energy decomposition scheme to use: 1: Per-residue decomp with 1-4 terms added to internal potential terms 2: Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms. 3: Pairwise decomp with 1-4 terms added to internal potential terms 4: Pairwise decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms Warning No default. This must be specified!. This functionality requires sander. print_res (Default = \"within 6\") Select residues from the complex to print. This variable also accepts a sequence of individual residues and/or ranges. The different fields must be either comma- or semicolon-delimited. For example: print_res = \"within 6\", where within corresponds to the keyword and 6 to the maximum distance criterion in Angstroms necessary to select the residues from both the receptor and the ligand; or print_res = \"1,3-10, 15, 100\", or print_res = \"1; 3-10; 15; 100\". Both of these will print residues 1, 3 through 10, 15, and 100 from the complex topology file and the corresponding residues in either the ligand and/or receptor topology files. Warning Using idecomp=3 or 4 (pairwise) with a very large number of printed residues and a large number of frames can quickly create very, very large temporary mdout files. Large print selections also demand a large amount of memory to parse the mdout files and write decomposition output file (~500 MB for just 250 residues, since that\u2019s 62500 pairs!) It is not unusual for the output file to take a significant amount of time to print if you have a lot of data. This is most applicable to pairwise decomp, since the amount of data scales as O(N 2 ). Check Based on the above, we decided to add a new option that limits the selection of the residues that will be printed by default. The new option (within 6) considerably reduces the number of residues to be printed reducing the computational cost. Additionally, it selects the interaction interface residues (according to the selected value) automatically, without the user needing to define them explicitly.","title":"&amp;decomp namelist variables"},{"location":"input_file/#rism-namelist-variables","text":"Warning 3D-RISM calculations are performed with the rism3d.snglpnt program built with AmberTools, written by Tyler Luchko. It is the most expensive, yet most statistical mechanically rigorous solvation model available in MMPBSA.py . See Chapter 7 for a more thorough description of options and theory. A list of references can be found there, too. One advantage of 3D-RISM is that an arbitrary solvent can be chosen; you just need to change the xvvfile specified on the command line (see 34.3.2 ). buffer (Default = 14 \u00c5) Minimum distance between solute and edge of solvation box. Specify this with grdspc below. Mutually exclusive with ng and solvbox. Set buffer < 0 if you wish to use ng and solvbox . closure (Default = \"kh\") The approximation to the closure relation. Allowed choices are kh (Kovalenko-Hirata), hnc (Hypernetted- chain), or psen (Partial Series Expansion of order-n) where \"n\" is a positive integer ( e.g. , \"pse3\"). Deprecated closureorder (Default = 1) The order at which the PSE-n closure is truncated if closure is specified as \"pse\" or \"psen\" (no integers). grdspc (Default = 0.5 \u00c5) Grid spacing of the solvation box. Specify this with buffer above. Mutually exclusive with ng and solvbox . ng Number of grid points to use in the x, y, and z directions. Used only if buffer < 0. Mutually exclusive with buffer and grdspc above, and paired with solvbox below. Warning No default, this must be set if buffer < 0. Define like \"ng=1000,1000,1000\" polardecomp (Default = 0) Decompose the solvation free energy into polar and non-polar contributions. Note that this will increase computation time by roughly 80%. 0: Don\u2019t decompose solvation free energy. 1: Decompose solvation free energy. rism_verbose (Default = 0) Level of output in temporary RISM output files. May be helpful for debugging or following convergence. 0: just print the final result 1: additionally prints the total number of iterations for each solution 2: additionally prints the residual for each iteration and details of the MDIIS solver solvbox Length of the solvation box in the x, y, and z dimensions. Used only if buffer < 0. Mutually exclusive with buffer and grdspc above, and paired with ng above. Warining No default, this must be set if buffer < 0. Define like \"solvbox=20,20,20\" solvcut (Default = buffer ) Cutoff used for solute-solvent interactions. The default is the value of buffer. Therefore, if you set buffer < 0 and specify ng and solvbox instead, you must set solvcut to a nonzero value, or the program will quit in error. thermo (Default = \"std\") Which thermodynamic equation you want to use to calculate solvation properties. Options are \"std\", \"gf\", or \"both\" (case-INsensitive). \"std\" uses the standard closure relation, \"gf\" uses the Gaussian Fluctuation approximation,and \"both\" will print out separate sections for both. . Note Note that all data are printed out for each RISM simulation, so no choice is any more computationally demanding than another. Also, you can change this option and use the -rewrite-output flag to obtain a different printout after-the-fact. tolerance (Default = 1e-5) Upper bound of the precision requirement used to determine convergence of the self-consistent solution. This has a strong effect on the cost of 3D-RISM calculations.","title":"&amp;rism namelist variables"},{"location":"input_file/#sample-input-files","text":"Tip You can refer to the examples to understand the input file in a practical way.","title":"Sample input files"},{"location":"input_file/#gb-and-pb","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB and PB calculation building the Amber topologies from structures. Please refer to the section \"How gmx_MMPBSA works\" &general startframe=5, endframe=100, interval=5, verbose=2, protein_forcefield=\"oldff/leaprc.ff99SB\", ligand_forcefield=\"leaprc.gaff\" / &gb igb=5, saltcon=0.150, / &pb istrng=0.15, fillratio=4.0 /","title":"GB and PB"},{"location":"input_file/#alanine-scanning","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for Alanine scanning &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / &alanine_scanning mutant='ALA' mutant_res='B:12' /","title":"Alanine scanning"},{"location":"input_file/#entropy","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Sample input file for entropy calculations &general startframe=5, endframe=21, verbose=2, interval=1, # `entropy` variable control whether to perform a quasi-harmonic entropy (QH) # approximation or the Interaction Entropy (IE) # (https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation protein_forcefield=\"oldff/leaprc.ff99SB\", entropy=2, entropy_seg=25, entropy_temp=298 / &gb igb=2, saltcon=0.150, / uncomment the next 4 lines for normal mode calculations #&nmode #nmstartframe=5, nmendframe=21, nminterval=2, #maxcyc=50000, drms=0.0001, #/","title":"Entropy"},{"location":"input_file/#decomposition-analysis","text":"Sample input file with decomposition analysis Make sure to include at least one residue from both the receptor and ligand in the print_res mask of the &decomp section. http://archive.ambermd.org/201308/0075.html &general startframe=5, endframe=21, interval=1, / &gb igb=5, saltcon=0.150, / &decomp idecomp=2, dec_verbose=3, # This will print all residues that are less than 4 angstroms between # the receptor and the ligand print_res=\"within 4\" /","title":"Decomposition analysis"},{"location":"input_file/#qmmmgbsa","text":"Sample input file for QM/MMGBSA &general startframe=5, endframe=100, interval=5, / &gb igb=5, saltcon=0.100, ifqnt=1, qmcharge_com=0, qm_residues=\"100-105, 200\", qm_theory=\"PM3\" /","title":"QM/MMGBSA"},{"location":"input_file/#mm3d-rism","text":"Sample input file for MM/3D-RISM &general startframe=20, endframe=100, interval=5, / &rism polardecomp=1, thermo=\"gf\" /","title":"MM/3D-RISM"},{"location":"input_file/#mmpbsa-with-membrane-proteins","text":"Sample input file for MMPBSA with membrane proteins &general startframe=1, endframe=100, interval=1, debug_printlevel=2, use_sander=1, / &pb radiopt=0, indi=20.0, istrng=0.150, fillratio=1.25, ipb=1, nfocus=1, bcopt=10, eneopt=1, cutfd=7.0, cutnb=99.0, npbverb=1, solvopt=2, inp=2, memopt=1, emem=7.0, mctrdz=-10.383, mthick=36.086, poretype=1, maxarcdot=15000 / Info Comments are allowed by placing a # at the beginning of the line (whites-space are ignored). Variable initialization may span multiple lines. In-line comments ( i.e. , putting a # for a comment after a variable is initialized in the same line) is not allowed and will result in an input error. Variable declarations must be comma-delimited, though all whitespace is ignored. Finally, all lines between namelists are ignored, so comments can be added before each namelist without using #. The chain ID is assigned according to two criteria: terminal amino acids and residue numbering . If both criteria or residue numbering changes are present, we assign a new chain ID. If there are terminal amino acids but the numbering of the residue continues, we do not change the ID of the chain. \u21a9 \u21a9 These variables will choose a subset of the frames chosen from the variables in the &general namelist. Thus, the \"trajectory\" from which snapshots will be chosen for nmode calculations will be the collection of snapshots upon which the other calculations were performed. \u21a9 \u21a9 \u21a9","title":"MMPBSA with membrane proteins"},{"location":"installation/","text":"Installing gmx_MMPBSA \u00b6 Requirements \u00b6 gmx_MMPBSA requires AmberTools20 to be installed in your machine with Python3 and the shell environment correctly set up for Amber. The AmberTools suite is free of charge and you can check Amber Manual for a detailed installation guide. Of note, you can have more than one AmberTools installed in your machine. In case AmberTools20 is not the default Amber in your computer, just make sure to source AmberTools20 before installing/updating/running gmx_MMPBSA . gmx_MMPBSA also requires GROMACS (series 4.x.x or 5.x.x or 20xx.x) to be installed in your computer and the shell environment correctly set up for GROMACS. gmx_MMPBSA has been tested with GROMACS 4.6.7, 5.1.2, 2018.3, and 2020.4, although it should run smoothly with any GROMACS present in the PATH and that is compatible with the files you are using. gmx_MMPBSA contains a module that allows for plotting the results ( gmx_MMPBSA_ana ). For this, it requires the installation of PyQt5. amber.python -m pip install PyQt5 Installation \u00b6 You can install gmx_MMPBSA from the stable version on PYPI: amber.python -m pip install gmx_MMPBSA or the development version from GitHub: amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA Make sure that you have git installed. If not you can install it as follows: sudo apt install git Update \u00b6 Warning This section will be modified in the future. If you already have installed a previous gmx_MMPBSA version, you can update it as follows: stable version (recommended): amber.python -m pip install gmx_MMPBSA --upgrade development version from GitHub: amber.python -m pip intall git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA --upgrade Make sure that you have git installed. We will do our best to keep the PYPI package up to date. Every big leap in the implementation of some new functionality will be released in PyPI. The development version is generally functional. So if you run into any issues, please consider updating from Github. If the problem persists, feel free to contact us After Install \u00b6 Once the installation is completed, the following warning may appear: WARNING: The scripts gmx_MMPBSA and gmx_MMPBSA_ana are installed in '/home/user/path_to_amber_install/amber20/miniconda/bin' which is not on PATH. This warning is because pip installs the executables ( gmx_MMPBSA and gmx_MMPBSA_ana ) in */amber20/miniconda/bin. You have two options to solve this: Add this folder (*/amber20/miniconda/bin) to PATH: export PATH=\"/home/user/path_to_amber_install/amber20/miniconda/bin:$PATH\" This option is more permanent and is recommended if you don't want to activate and deactivate the conda environment Tip Make sure to update user and path_to_amber_install in the PATH variable or initializing the environment of conda amber: amber.conda init bash You can deactivate like this: conda deactivate After using one of the above options, you should be able to run gmx_MMPBSA and gmx_MMPBSA_ana through the terminal If when running gmx_MMPBSA , you get an error like this: ModuleNotFoundError: No module named 'parmed' please see the following issue to see the solution Autocompletion script \u00b6 Since gmx_MMPBSA has many flags, we believe that this autocompletion can significantly improve productivity, be more user-friendly and reduce the number of unforced errors. That is why we created this script, which manages the autocompletion of the gmx_MMPBSA and gmx_MMPBSA_ana. Installation: Enter the following command in the terminal: source /path_to_installed_gmx_MMPBSA/GMXMMPBSA.sh If you followed the gmx_MMPBSA installation instructions, this path should be as follows: /path/to/ambertools/lib/python3.8/site-packages/GMXMMPBSA/GMXMMPBSA.sh If you want it to be activated automatically, add that command to your .bashrc Warning This script requires that gmx_MMPBSA and gmx_MMPBSA_ana be accessible in PATH Tip If the command-line above end in error, please make sure the file has executed permissions. On Ubuntu, Debian, Linux Mint or related: GUI: Right-click on the file > Properties> Permissions> mark the checkbox \"Allow to execute the file as a program\" or Terminal: chmod 755 /path_to_installed_gmx_MMPBSA/GMXMMPBSA.sh Once the file has execution permissions, enter the following command in the terminal: Functioning: All you have to do is enter the name of the program in the terminal and press the tab key twice: gmx_MMPBSA <tab> <tab>","title":"Installation"},{"location":"installation/#installing-gmx_mmpbsa","text":"","title":"Installing gmx_MMPBSA"},{"location":"installation/#requirements","text":"gmx_MMPBSA requires AmberTools20 to be installed in your machine with Python3 and the shell environment correctly set up for Amber. The AmberTools suite is free of charge and you can check Amber Manual for a detailed installation guide. Of note, you can have more than one AmberTools installed in your machine. In case AmberTools20 is not the default Amber in your computer, just make sure to source AmberTools20 before installing/updating/running gmx_MMPBSA . gmx_MMPBSA also requires GROMACS (series 4.x.x or 5.x.x or 20xx.x) to be installed in your computer and the shell environment correctly set up for GROMACS. gmx_MMPBSA has been tested with GROMACS 4.6.7, 5.1.2, 2018.3, and 2020.4, although it should run smoothly with any GROMACS present in the PATH and that is compatible with the files you are using. gmx_MMPBSA contains a module that allows for plotting the results ( gmx_MMPBSA_ana ). For this, it requires the installation of PyQt5. amber.python -m pip install PyQt5","title":"Requirements"},{"location":"installation/#installation","text":"You can install gmx_MMPBSA from the stable version on PYPI: amber.python -m pip install gmx_MMPBSA or the development version from GitHub: amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA Make sure that you have git installed. If not you can install it as follows: sudo apt install git","title":"Installation"},{"location":"installation/#update","text":"Warning This section will be modified in the future. If you already have installed a previous gmx_MMPBSA version, you can update it as follows: stable version (recommended): amber.python -m pip install gmx_MMPBSA --upgrade development version from GitHub: amber.python -m pip intall git+https://github.com/Valdes-Tresanco-MS/gmx_MMPBSA --upgrade Make sure that you have git installed. We will do our best to keep the PYPI package up to date. Every big leap in the implementation of some new functionality will be released in PyPI. The development version is generally functional. So if you run into any issues, please consider updating from Github. If the problem persists, feel free to contact us","title":"Update"},{"location":"installation/#after-install","text":"Once the installation is completed, the following warning may appear: WARNING: The scripts gmx_MMPBSA and gmx_MMPBSA_ana are installed in '/home/user/path_to_amber_install/amber20/miniconda/bin' which is not on PATH. This warning is because pip installs the executables ( gmx_MMPBSA and gmx_MMPBSA_ana ) in */amber20/miniconda/bin. You have two options to solve this: Add this folder (*/amber20/miniconda/bin) to PATH: export PATH=\"/home/user/path_to_amber_install/amber20/miniconda/bin:$PATH\" This option is more permanent and is recommended if you don't want to activate and deactivate the conda environment Tip Make sure to update user and path_to_amber_install in the PATH variable or initializing the environment of conda amber: amber.conda init bash You can deactivate like this: conda deactivate After using one of the above options, you should be able to run gmx_MMPBSA and gmx_MMPBSA_ana through the terminal If when running gmx_MMPBSA , you get an error like this: ModuleNotFoundError: No module named 'parmed' please see the following issue to see the solution","title":"After Install"},{"location":"installation/#autocompletion-script","text":"Since gmx_MMPBSA has many flags, we believe that this autocompletion can significantly improve productivity, be more user-friendly and reduce the number of unforced errors. That is why we created this script, which manages the autocompletion of the gmx_MMPBSA and gmx_MMPBSA_ana. Installation: Enter the following command in the terminal: source /path_to_installed_gmx_MMPBSA/GMXMMPBSA.sh If you followed the gmx_MMPBSA installation instructions, this path should be as follows: /path/to/ambertools/lib/python3.8/site-packages/GMXMMPBSA/GMXMMPBSA.sh If you want it to be activated automatically, add that command to your .bashrc Warning This script requires that gmx_MMPBSA and gmx_MMPBSA_ana be accessible in PATH Tip If the command-line above end in error, please make sure the file has executed permissions. On Ubuntu, Debian, Linux Mint or related: GUI: Right-click on the file > Properties> Permissions> mark the checkbox \"Allow to execute the file as a program\" or Terminal: chmod 755 /path_to_installed_gmx_MMPBSA/GMXMMPBSA.sh Once the file has execution permissions, enter the following command in the terminal: Functioning: All you have to do is enter the name of the program in the terminal and press the tab key twice: gmx_MMPBSA <tab> <tab>","title":"Autocompletion script"},{"location":"introduction/","text":"Introduction \u00b6 Molecular Mechanics / Poisson Boltzmann (or Generalized Born) Surface Area (MM/PB(GB)SA) is a post-processing method in which representative snapshots from an ensemble of conformations are used to calculate the free energy change between two states (typically a bound and free state of a receptor and ligand). Free energy differences are calculated by combining the so-called gas phase energy contributions (MM term) that are independent of the chosen solvent model as well as solvation free energy components (both polar and non-polar) calculated from an implicit solvent model combination (PBSA or GBSA) for each species. Entropy contributions to the total free energy may be added as a further refinement. The gas phase free energy contributions are calculated by sander or mmpbsa_py_energy within the AmberTools package according to the force field used in the MD simulation. The solvation free energy contributions may be further decomposed into a polar and non-polar contributions. The polar portion is calculated using the Poisson Boltzmann (PB) equation, the Generalized Born method, or the Reference Interaction Site Model (RISM). The PB equation is solved numerically by either the pbsa program included with AmberTools or by the Adaptive Poisson Boltzmann Solver (APBS) program (for more information, see http://www.poissonboltzmann.org ). The non-polar contribution is approximated by the LCPO method implemented within sander or the molsurf method as implemented in cpptraj. The entropy calculations can be done in either a HCT Generalized Born solvation model or in the gas phase using a mmpbsa_py_nabnmode program written in the nab programming language, or via the quasi-harmonic approximation in ptraj as in the original MMPBSA.py . In this new module, entropy term (\u2212T\u0394S) can be also estimated using the so-called Interaction Entropy method, which is theoretically rigorous, computationally efficient, and numerically reliable for calculating entropic contribution to free energy in protein\u2013ligand binding and other interaction processes. Usually, the Single Trajectory (ST) approximation is employed when performing MM/PB(GB)SA calculations. This approximation assumes that the configurational space explored by the systems are very similar between the bound and unbound states, so every snapshot for each species ( i.e. complex, receptor, and ligand) is extracted from the same trajectory file. This approximation improves binding free energies convergence and also reduces the computing time. However, it only should be applied when the molecules in the unbound state present a similar behavior to that of the bound state. On the other hand, in the so-called Multiple Trajectory (MT) approximation, the snapshots for each one of the species ( i.e. complex, receptor, and ligand) are extracted from their own trajectory file. This approximation, theoretically more rigorous though, leads to higher standard deviation of the binding free energies. Literature \u00b6 Further information can be found in Amber manual : MMPBSA.py The Generalized Born/Surface Area Model PBSA Reference Interaction Site Model Generalized Born (GB) for QM/MM calculations and the foundational papers: Srinivasan J. et al., 1998 Kollman P. A. et al., 2000 Gohlke H., Case D. A. 2004 as well as some reviews: Genheden S., Ryde U. 2015 Wang et. al., 2018 Wang et. al., 2019","title":"Introduction"},{"location":"introduction/#introduction","text":"Molecular Mechanics / Poisson Boltzmann (or Generalized Born) Surface Area (MM/PB(GB)SA) is a post-processing method in which representative snapshots from an ensemble of conformations are used to calculate the free energy change between two states (typically a bound and free state of a receptor and ligand). Free energy differences are calculated by combining the so-called gas phase energy contributions (MM term) that are independent of the chosen solvent model as well as solvation free energy components (both polar and non-polar) calculated from an implicit solvent model combination (PBSA or GBSA) for each species. Entropy contributions to the total free energy may be added as a further refinement. The gas phase free energy contributions are calculated by sander or mmpbsa_py_energy within the AmberTools package according to the force field used in the MD simulation. The solvation free energy contributions may be further decomposed into a polar and non-polar contributions. The polar portion is calculated using the Poisson Boltzmann (PB) equation, the Generalized Born method, or the Reference Interaction Site Model (RISM). The PB equation is solved numerically by either the pbsa program included with AmberTools or by the Adaptive Poisson Boltzmann Solver (APBS) program (for more information, see http://www.poissonboltzmann.org ). The non-polar contribution is approximated by the LCPO method implemented within sander or the molsurf method as implemented in cpptraj. The entropy calculations can be done in either a HCT Generalized Born solvation model or in the gas phase using a mmpbsa_py_nabnmode program written in the nab programming language, or via the quasi-harmonic approximation in ptraj as in the original MMPBSA.py . In this new module, entropy term (\u2212T\u0394S) can be also estimated using the so-called Interaction Entropy method, which is theoretically rigorous, computationally efficient, and numerically reliable for calculating entropic contribution to free energy in protein\u2013ligand binding and other interaction processes. Usually, the Single Trajectory (ST) approximation is employed when performing MM/PB(GB)SA calculations. This approximation assumes that the configurational space explored by the systems are very similar between the bound and unbound states, so every snapshot for each species ( i.e. complex, receptor, and ligand) is extracted from the same trajectory file. This approximation improves binding free energies convergence and also reduces the computing time. However, it only should be applied when the molecules in the unbound state present a similar behavior to that of the bound state. On the other hand, in the so-called Multiple Trajectory (MT) approximation, the snapshots for each one of the species ( i.e. complex, receptor, and ligand) are extracted from their own trajectory file. This approximation, theoretically more rigorous though, leads to higher standard deviation of the binding free energies.","title":"Introduction"},{"location":"introduction/#literature","text":"Further information can be found in Amber manual : MMPBSA.py The Generalized Born/Surface Area Model PBSA Reference Interaction Site Model Generalized Born (GB) for QM/MM calculations and the foundational papers: Srinivasan J. et al., 1998 Kollman P. A. et al., 2000 Gohlke H., Case D. A. 2004 as well as some reviews: Genheden S., Ryde U. 2015 Wang et. al., 2018 Wang et. al., 2019","title":"Literature"},{"location":"output/","text":"Output Files \u00b6 The output file \u00b6 The header of the output file will contain information about the calculation. It will show a copy of the input file as well as the names of all files that were used in the calculation (topology files and coordinate file(s)). If the masks were not specified, it prints its best guess so that you can verify its accuracy, along with the residue name of the ligand (if it is only a single residue). The energy and entropy contributions are broken up into their components as they are in sander and nmode or ptraj. The contributions are further broken into G gas and G solv . The polar and non-polar contributions are EGB (or EPB) and ESURF (or ECAVITY / ENPOLAR), respectively for GB (or PB) calculations. By default, bonded terms are not printed for any one-trajectory simulation. They are computed and their dif- ferences calculated, however. They are not shown (nor included in the total) unless specifically asked for because they should cancel completely. A single trajectory does not produce any differences between bond lengths, angles, or dihedrals between the complex and receptor/ligand structures. Thus, when subtracted they cancel completely. This includes the BOND, ANGLE, DIHED, and 1-4 interactions. If inconsistencies are found, these values are displayed and inconsistency warnings are printed. When this occurs the results are generally useless. Of course this does not hold for the multiple trajectory protocol, and so all energy components are printed in this case. Finally, all warnings generated during the calculation that do not result in fatal errors are printed after calculation details but before any results. Temporary Files \u00b6 Warning This section does not record all the temporary files that are currently generated. gmx_MMPBSA creates working files during the execution of the script beginning with the prefix _GMXMMPBSA_ . If gmx_MMPBSA does not finish successfully, several of these files may be helpful in diagnosing the problem. For that reason, every temporary file is described below. Note that not every temporary file is generated in every simulation. At the end of each description, the lowest value of the original \u201ckeep_files\u201d variable that will retain this file will be shown in parentheses. Nevertheless, in the current version, all the files are retained for plotting purposes. gmx_MMPBSA.log This file contains the output coming from gmx_MMPBSA . leap.log This file contains the output coming from tleap program. _GMXMMPBSA_gb.mdin Input file that controls the GB calculation done in sander. (2) _GMXMMPBSA_pb.mdin Input file that controls the PB calculation done in sander. (2) _GMXMMPBSA_gb_decomp_com.mdin Input file that controls the GB decomp calculation for the complex done in sander. (2) _GMXMMPBSA_gb_decomp_rec.mdin Input file that controls the GB decomp calculation for the receptor done in sander. (2) _GMXMMPBSA_gb_decomp_lig.mdin Input file that controls the GB decomp calculation for the ligand done in sander. (2) _GMXMMPBSA_pb_decomp_com.mdin Input file that controls the PB decomp calculation for the complex done in sander. (2) _GMXMMPBSA_pb_decomp_rec.mdin Input file that controls the PB decomp calculation for the receptor done in sander. (2) _GMXMMPBSA_pb_decomp_lig.mdin Input file that controls the PB decomp calculation for the ligand done in sander. (2) _GMXMMPBSA_gb_qmmm_com.mdin Input file that controls the GB QM/MM calculation for the complex done in sander. (2) _GMXMMPBSA_gb_qmmm_rec.mdin Input file that controls the GB QM/MM calculation for the receptor done in sander. (2) _GMXMMPBSA_gb_qmmm_lig.mdin Input file that controls the GB QM/MM calculation for the ligand done in sander. (2) _GMXMMPBSA_complex.mdcrd.# Trajectory file(s) that contains only those complex snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_ligand.mdcrd.# Trajectory file(s) that contains only those ligand snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_receptor.mdcrd.# Trajectory file(s) that contains only those receptor snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_complex_nc.# Same as _GMXMMPBSA_complex.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_receptor_nc.# Same as _GMXMMPBSA_receptor.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_ligand_nc.# Same as _GMXMMPBSA_ligand.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_dummycomplex.inpcrd Dummy inpcrd file generated by _GMXMMPBSA_complexinpcrd.in for use with imin=5 functionality in sander. (1) _GMXMMPBSA_dummyreceptor.inpcrd Same as above, but for the receptor. (1) _GMXMMPBSA_dummyligand.inpcrd Same as above, but for the ligand. (1) _GMXMMPBSA_complex.pdb Dummy PDB file of the complex required to set molecule up in nab programs _GMXMMPBSA_receptor.pdb Dummy PDB file of the receptor required to set molecule up in nab programs _GMXMMPBSA_ligand.pdb Dummy PDB file of the ligand required to set molecule up in nab programs _GMXMMPBSA_complex_nm.mdcrd.# Trajectory file(s) for each thread with snapshots used for normal mode calcula- tions on the complex. (1) _GMXMMPBSA_receptor_nm.mdcrd.# Trajectory file for each thread with snapshots used for normal mode calcula- tions on the receptor. (1) _GMXMMPBSA_ligand_nm.mdcrd.# Trajectory file for each thread with snapshots used for normal mode calculations on the ligand. (1) _GMXMMPBSA_ptrajentropy.in Input file that calculates the entropy via the quasi-harmonic approximation. This file is processed by ptraj. (2) _GMXMMPBSA_avgcomplex.pdb PDB file containing the average positions of all complex conformations processed by _GMXMMPBSA_cenptraj.in. It is used as the reference for the _GMXMMPBSA_ptrajentropy.in file above. (1) _GMXMMPBSA_complex_entropy.out File into which the entropy results from _GMXMMPBSA_ptrajentropy.in analysis on the complex are dumped. (1) _GMXMMPBSA_receptor_entropy.out Same as above, but for the receptor. (1) _GMXMMPBSA_ligand_entropy.out Same as above, but for the ligand. (1) _GMXMMPBSA_ptraj_entropy.out Output from running ptraj using _GMXMMPBSA_ptrajentropy.in. (1) _GMXMMPBSA_complex_gb.mdout.# sander output file containing energy components of all complex snapshots done in GB. (1) _GMXMMPBSA_receptor_gb.mdout.# sander output file containing energy components of all receptor snapshots done in GB. ( 1) _GMXMMPBSA_ligand_gb.mdout.# sander output file containing energy components of all ligand snapshots done in GB. (1) _GMXMMPBSA_complex_pb.mdout.# sander output file containing energy components of all complex snapshots done in PB. (1) _GMXMMPBSA_receptor_pb.mdout.# sander output file containing energy components of all receptor snapshots done in PB. ( 1) _GMXMMPBSA_ligand_pb.mdout.# sander output file containing energy components of all ligand snapshots done in PB. (1) _GMXMMPBSA_complex_rism.out.# rism3d.snglpnt output file containing energy components of all complex snap- shots done with 3D-RISM (1) _GMXMMPBSA_receptor_rism.out.# rism3d.snglpnt output file containing energy components of all receptor snap- shots done with 3D-RISM (1) _GMXMMPBSA_ligand_rism.out.# rism3d.snglpnt output file containing energy components of all ligand snapshots done with 3D-RISM (1) _GMXMMPBSA_pbsanderoutput.junk.# File containing the information dumped by sander.APBS to STDOUT. (1) _GMXMMPBSA_ligand_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the ligand for all snapshots. (1) _GMXMMPBSA_receptor_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the receptor for all snapshots. (1) _GMXMMPBSA_complex_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the com- plex for all snapshots. (1) _GMXMMPBSA_mutant_... These files are analogs of the files that only start with _GMXMMPBSA_ described above, but instead refer to the mutant system of alanine scanning calculations. _GMXMMPBSA_*out.# These files are thread-specific files. For serial simulations, only #=0 files are created. For parallel, #=0 through NUM_PROC - 1 are created.","title":"Output Files"},{"location":"output/#output-files","text":"","title":"Output Files"},{"location":"output/#the-output-file","text":"The header of the output file will contain information about the calculation. It will show a copy of the input file as well as the names of all files that were used in the calculation (topology files and coordinate file(s)). If the masks were not specified, it prints its best guess so that you can verify its accuracy, along with the residue name of the ligand (if it is only a single residue). The energy and entropy contributions are broken up into their components as they are in sander and nmode or ptraj. The contributions are further broken into G gas and G solv . The polar and non-polar contributions are EGB (or EPB) and ESURF (or ECAVITY / ENPOLAR), respectively for GB (or PB) calculations. By default, bonded terms are not printed for any one-trajectory simulation. They are computed and their dif- ferences calculated, however. They are not shown (nor included in the total) unless specifically asked for because they should cancel completely. A single trajectory does not produce any differences between bond lengths, angles, or dihedrals between the complex and receptor/ligand structures. Thus, when subtracted they cancel completely. This includes the BOND, ANGLE, DIHED, and 1-4 interactions. If inconsistencies are found, these values are displayed and inconsistency warnings are printed. When this occurs the results are generally useless. Of course this does not hold for the multiple trajectory protocol, and so all energy components are printed in this case. Finally, all warnings generated during the calculation that do not result in fatal errors are printed after calculation details but before any results.","title":"The output file"},{"location":"output/#temporary-files","text":"Warning This section does not record all the temporary files that are currently generated. gmx_MMPBSA creates working files during the execution of the script beginning with the prefix _GMXMMPBSA_ . If gmx_MMPBSA does not finish successfully, several of these files may be helpful in diagnosing the problem. For that reason, every temporary file is described below. Note that not every temporary file is generated in every simulation. At the end of each description, the lowest value of the original \u201ckeep_files\u201d variable that will retain this file will be shown in parentheses. Nevertheless, in the current version, all the files are retained for plotting purposes. gmx_MMPBSA.log This file contains the output coming from gmx_MMPBSA . leap.log This file contains the output coming from tleap program. _GMXMMPBSA_gb.mdin Input file that controls the GB calculation done in sander. (2) _GMXMMPBSA_pb.mdin Input file that controls the PB calculation done in sander. (2) _GMXMMPBSA_gb_decomp_com.mdin Input file that controls the GB decomp calculation for the complex done in sander. (2) _GMXMMPBSA_gb_decomp_rec.mdin Input file that controls the GB decomp calculation for the receptor done in sander. (2) _GMXMMPBSA_gb_decomp_lig.mdin Input file that controls the GB decomp calculation for the ligand done in sander. (2) _GMXMMPBSA_pb_decomp_com.mdin Input file that controls the PB decomp calculation for the complex done in sander. (2) _GMXMMPBSA_pb_decomp_rec.mdin Input file that controls the PB decomp calculation for the receptor done in sander. (2) _GMXMMPBSA_pb_decomp_lig.mdin Input file that controls the PB decomp calculation for the ligand done in sander. (2) _GMXMMPBSA_gb_qmmm_com.mdin Input file that controls the GB QM/MM calculation for the complex done in sander. (2) _GMXMMPBSA_gb_qmmm_rec.mdin Input file that controls the GB QM/MM calculation for the receptor done in sander. (2) _GMXMMPBSA_gb_qmmm_lig.mdin Input file that controls the GB QM/MM calculation for the ligand done in sander. (2) _GMXMMPBSA_complex.mdcrd.# Trajectory file(s) that contains only those complex snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_ligand.mdcrd.# Trajectory file(s) that contains only those ligand snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_receptor.mdcrd.# Trajectory file(s) that contains only those receptor snapshots that will be processed by MMPBSA.py. (1) _GMXMMPBSA_complex_nc.# Same as _GMXMMPBSA_complex.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_receptor_nc.# Same as _GMXMMPBSA_receptor.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_ligand_nc.# Same as _GMXMMPBSA_ligand.mdcrd.#, except in the NetCDF format. (1) _GMXMMPBSA_dummycomplex.inpcrd Dummy inpcrd file generated by _GMXMMPBSA_complexinpcrd.in for use with imin=5 functionality in sander. (1) _GMXMMPBSA_dummyreceptor.inpcrd Same as above, but for the receptor. (1) _GMXMMPBSA_dummyligand.inpcrd Same as above, but for the ligand. (1) _GMXMMPBSA_complex.pdb Dummy PDB file of the complex required to set molecule up in nab programs _GMXMMPBSA_receptor.pdb Dummy PDB file of the receptor required to set molecule up in nab programs _GMXMMPBSA_ligand.pdb Dummy PDB file of the ligand required to set molecule up in nab programs _GMXMMPBSA_complex_nm.mdcrd.# Trajectory file(s) for each thread with snapshots used for normal mode calcula- tions on the complex. (1) _GMXMMPBSA_receptor_nm.mdcrd.# Trajectory file for each thread with snapshots used for normal mode calcula- tions on the receptor. (1) _GMXMMPBSA_ligand_nm.mdcrd.# Trajectory file for each thread with snapshots used for normal mode calculations on the ligand. (1) _GMXMMPBSA_ptrajentropy.in Input file that calculates the entropy via the quasi-harmonic approximation. This file is processed by ptraj. (2) _GMXMMPBSA_avgcomplex.pdb PDB file containing the average positions of all complex conformations processed by _GMXMMPBSA_cenptraj.in. It is used as the reference for the _GMXMMPBSA_ptrajentropy.in file above. (1) _GMXMMPBSA_complex_entropy.out File into which the entropy results from _GMXMMPBSA_ptrajentropy.in analysis on the complex are dumped. (1) _GMXMMPBSA_receptor_entropy.out Same as above, but for the receptor. (1) _GMXMMPBSA_ligand_entropy.out Same as above, but for the ligand. (1) _GMXMMPBSA_ptraj_entropy.out Output from running ptraj using _GMXMMPBSA_ptrajentropy.in. (1) _GMXMMPBSA_complex_gb.mdout.# sander output file containing energy components of all complex snapshots done in GB. (1) _GMXMMPBSA_receptor_gb.mdout.# sander output file containing energy components of all receptor snapshots done in GB. ( 1) _GMXMMPBSA_ligand_gb.mdout.# sander output file containing energy components of all ligand snapshots done in GB. (1) _GMXMMPBSA_complex_pb.mdout.# sander output file containing energy components of all complex snapshots done in PB. (1) _GMXMMPBSA_receptor_pb.mdout.# sander output file containing energy components of all receptor snapshots done in PB. ( 1) _GMXMMPBSA_ligand_pb.mdout.# sander output file containing energy components of all ligand snapshots done in PB. (1) _GMXMMPBSA_complex_rism.out.# rism3d.snglpnt output file containing energy components of all complex snap- shots done with 3D-RISM (1) _GMXMMPBSA_receptor_rism.out.# rism3d.snglpnt output file containing energy components of all receptor snap- shots done with 3D-RISM (1) _GMXMMPBSA_ligand_rism.out.# rism3d.snglpnt output file containing energy components of all ligand snapshots done with 3D-RISM (1) _GMXMMPBSA_pbsanderoutput.junk.# File containing the information dumped by sander.APBS to STDOUT. (1) _GMXMMPBSA_ligand_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the ligand for all snapshots. (1) _GMXMMPBSA_receptor_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the receptor for all snapshots. (1) _GMXMMPBSA_complex_nm.out.# Output file from mmpbsa_py_nabnmode that contains the entropy data for the com- plex for all snapshots. (1) _GMXMMPBSA_mutant_... These files are analogs of the files that only start with _GMXMMPBSA_ described above, but instead refer to the mutant system of alanine scanning calculations. _GMXMMPBSA_*out.# These files are thread-specific files. For serial simulations, only #=0 files are created. For parallel, #=0 through NUM_PROC - 1 are created.","title":"Temporary Files"},{"location":"summary/","text":"gmx_MMPBSA in a nutshell \u00b6 gmx_MMPBSA brings in all the MMPBSA.py functionalities to GROMACS users. In addition, few other functionalities were implemented that eases a number of calculations ( e.g. MM/PB(GB)SA with different internal dielectric constant, interaction entropy calculation). A GUI application is also incorporated that allows for visualizing the results and saving high-quality images. Types of calculations you can do \u00b6 There are many different options for running gmx_MMPBSA . Among the types of calculations you can do are: Normal binding free energies , with either PB or GB implicit solvent models. Each can be done with either 1, 2, or 3 different trajectories, but the complex, receptor, and ligand topology files must all be defined. The complex trajectory must always be provided. Whichever trajectories of the receptor and/or ligand that are NOT specified will be extracted from the complex trajectory. This allows a 1-, 2-, or 3-trajectory analysis. All PB calculations and GB models can be performed with just AmberTools via the mmpbsa_py_energy program installed with MMPBSA.py. Stability calculations with any calculation type. Alanine scanning with either PB or GB implicit solvent models. All trajectories will be mutated to match the mutated topology files, and whichever calculations that would be carried out for the normal systems are also carried out for the mutated systems. Note that only 1 mutation is allowed per simulation, and it must be to an alanine. If mutant_only is not set to 1, differences resulting from the mutations are calculated. This option is incompatible with intermediate NetCDF trajectories (see the netcdf = 1 option above). This has the same program requirements as option 1 above. Entropy corrections . An entropy term can be added to the free energies calculated above using either the quasi-harmonic, the normal mode or interaction entropy approximations. Calculations will be performed for the normal and mutated systems (alanine scanning) as requested. Normal mode calculations are done with the mmpbsa_py_nabnmode program included with AmberTools. Decomposition schemes . The energy terms will be decomposed according to the decomposition scheme outlined in the idecomp variable description. This should work with all of the above, though entropy terms cannot be decomposed. APBS energies cannot be decomposed, either. Neither can PBSA surface area terms. This functionality requires sander from the Amber 11 (or later) package. QM/MMGBSA . This is a binding free energy (or stability calculation) using the Generalized Born solvent model allowing you to treat part of your system with a quantum mechanical Hamiltonian. See \u201cAdvanced Options\u201d for tips about optimizing this option. This functionality requires sander from the Amber package. MM/3D-RISM . This is a binding free energy (or stability calculation) using the 3D-RISM solvation model. This functionality is performed with rism3d.snglpnt built with AmberTools. Membrane Protein MMPBSA . Calculate the MMPBSA binding free energy for a ligand bound to a protein that is embedded into a membrane. Only use_sander=1 is supported.","title":"gmx_MMPBSA in a nutshell"},{"location":"summary/#gmx_mmpbsa-in-a-nutshell","text":"gmx_MMPBSA brings in all the MMPBSA.py functionalities to GROMACS users. In addition, few other functionalities were implemented that eases a number of calculations ( e.g. MM/PB(GB)SA with different internal dielectric constant, interaction entropy calculation). A GUI application is also incorporated that allows for visualizing the results and saving high-quality images.","title":"gmx_MMPBSA in a nutshell"},{"location":"summary/#types-of-calculations-you-can-do","text":"There are many different options for running gmx_MMPBSA . Among the types of calculations you can do are: Normal binding free energies , with either PB or GB implicit solvent models. Each can be done with either 1, 2, or 3 different trajectories, but the complex, receptor, and ligand topology files must all be defined. The complex trajectory must always be provided. Whichever trajectories of the receptor and/or ligand that are NOT specified will be extracted from the complex trajectory. This allows a 1-, 2-, or 3-trajectory analysis. All PB calculations and GB models can be performed with just AmberTools via the mmpbsa_py_energy program installed with MMPBSA.py. Stability calculations with any calculation type. Alanine scanning with either PB or GB implicit solvent models. All trajectories will be mutated to match the mutated topology files, and whichever calculations that would be carried out for the normal systems are also carried out for the mutated systems. Note that only 1 mutation is allowed per simulation, and it must be to an alanine. If mutant_only is not set to 1, differences resulting from the mutations are calculated. This option is incompatible with intermediate NetCDF trajectories (see the netcdf = 1 option above). This has the same program requirements as option 1 above. Entropy corrections . An entropy term can be added to the free energies calculated above using either the quasi-harmonic, the normal mode or interaction entropy approximations. Calculations will be performed for the normal and mutated systems (alanine scanning) as requested. Normal mode calculations are done with the mmpbsa_py_nabnmode program included with AmberTools. Decomposition schemes . The energy terms will be decomposed according to the decomposition scheme outlined in the idecomp variable description. This should work with all of the above, though entropy terms cannot be decomposed. APBS energies cannot be decomposed, either. Neither can PBSA surface area terms. This functionality requires sander from the Amber 11 (or later) package. QM/MMGBSA . This is a binding free energy (or stability calculation) using the Generalized Born solvent model allowing you to treat part of your system with a quantum mechanical Hamiltonian. See \u201cAdvanced Options\u201d for tips about optimizing this option. This functionality requires sander from the Amber package. MM/3D-RISM . This is a binding free energy (or stability calculation) using the 3D-RISM solvation model. This functionality is performed with rism3d.snglpnt built with AmberTools. Membrane Protein MMPBSA . Calculate the MMPBSA binding free energy for a ligand bound to a protein that is embedded into a membrane. Only use_sander=1 is supported.","title":"Types of calculations you can do"},{"location":"versus/","text":"Comparison of gmx_MMPBSA vs other programs \u00b6 This comparison is based on the documentation of the different programs Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py 1 gmx_MMPBSA Normal binding free energies PB PB PB and GB PB and GB GB models 1, 2, 3, 5, 7 and 8 1, 2, 3, 5, 7 and 8 Stability Alanine scanning 2 Entropy corrections 3 nmode and qh nmode, qh, and IE Decomposition schemes Per-Residues Per-Residues and Per-Wise Per-Residues and Per-Wise QM/MMGBSA MM/3D-RISM Membrane Protein MMPBSA GROMACS Version 4.x, 5.x and 2016+ 4 4.x, 5.x and 20xx.x 5 --- 4.x, 5.x and 20xx.x Approximations ST ST ST and MT ST and MT API Graphical Analyzer Energy to PDB Energetic Terms charts Per-Frame Per-Frame Average (dat file) / Average and Per-Frame (API) 6 Average and Per-frame Energetic Terms charts representation xmgrace/ matplotlib/ gnuplot xmgrace/ matplotlib/ gnuplot API and graphics library gmx_MMPBSA_ana Externals programs APBS (1.2.x, 1.3.x or 1.4.x) APBS (1.x.x) 7 AmberTools20 AmberTools20 Parallel computation Depends on APBS version Steps for: Calculation and Summary Multiple Multiple One One Analysis Multiple Multiple Multiple One MMPBSA.py is included in AMBER package. \u21a9 Without documentation. \u21a9 nmode = Normal modes approximation, qh = Quasic-Harmony approximation and IE = Interaction Entropy approximation \u21a9 GROMACS 20xx.x is not officially supported. There is a Pull Request that offers a minimum of compatibility with versions higher than 2016.x but with limitations \u21a9 It is not clear if it supports the GROMACS versions 20xx, but we assume that it does because it is script-based. \u21a9 The user can obtain each energetic term per frame or its average values using the API. This means that user must be familiar with Python to handle the API, perform custom calculations or graph such data. \u21a9 It is not clear if it supports the APBS versions 3.x.x , but we assume that it does because it is script-based. \u21a9","title":"gmx_MMPBSA vs other programs"},{"location":"versus/#comparison-of-gmx_mmpbsa-vs-other-programs","text":"This comparison is based on the documentation of the different programs Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py 1 gmx_MMPBSA Normal binding free energies PB PB PB and GB PB and GB GB models 1, 2, 3, 5, 7 and 8 1, 2, 3, 5, 7 and 8 Stability Alanine scanning 2 Entropy corrections 3 nmode and qh nmode, qh, and IE Decomposition schemes Per-Residues Per-Residues and Per-Wise Per-Residues and Per-Wise QM/MMGBSA MM/3D-RISM Membrane Protein MMPBSA GROMACS Version 4.x, 5.x and 2016+ 4 4.x, 5.x and 20xx.x 5 --- 4.x, 5.x and 20xx.x Approximations ST ST ST and MT ST and MT API Graphical Analyzer Energy to PDB Energetic Terms charts Per-Frame Per-Frame Average (dat file) / Average and Per-Frame (API) 6 Average and Per-frame Energetic Terms charts representation xmgrace/ matplotlib/ gnuplot xmgrace/ matplotlib/ gnuplot API and graphics library gmx_MMPBSA_ana Externals programs APBS (1.2.x, 1.3.x or 1.4.x) APBS (1.x.x) 7 AmberTools20 AmberTools20 Parallel computation Depends on APBS version Steps for: Calculation and Summary Multiple Multiple One One Analysis Multiple Multiple Multiple One MMPBSA.py is included in AMBER package. \u21a9 Without documentation. \u21a9 nmode = Normal modes approximation, qh = Quasic-Harmony approximation and IE = Interaction Entropy approximation \u21a9 GROMACS 20xx.x is not officially supported. There is a Pull Request that offers a minimum of compatibility with versions higher than 2016.x but with limitations \u21a9 It is not clear if it supports the GROMACS versions 20xx, but we assume that it does because it is script-based. \u21a9 The user can obtain each energetic term per frame or its average values using the API. This means that user must be familiar with Python to handle the API, perform custom calculations or graph such data. \u21a9 It is not clear if it supports the APBS versions 3.x.x , but we assume that it does because it is script-based. \u21a9","title":"Comparison of gmx_MMPBSA vs other programs"},{"location":"examples/","text":"This is the tutorials folder. Here you can find a representation of almost all the types of calculations that you can perform with gmx_MMPBSA. Although each tutorial focuses on specific examples, you can use gmx_MMPBSA on systems that combine a number of characteristics (i.e. metalloprotein:ligand complex, Protein-DNA-ligand, etc.) \u00b6 Analysis MM/3D-RISM Alanine scanning Decomposition analysis Multiple Trajectory method (Protein-Ligand) Stability calculations Entropy Interaction Entropy calculations nmode Entropy calculations Systems Protein-protein binding free energy calculations Single Trajectory method (Protein-Ligand) Protein-DNA binding free energy calculations Metalloprotein-peptide binding free energy calculations Protein-DNA-RNA-Ions-Ligand binding free energy calculations Protein-glycan binding free energy calculations MMPBSA with membrane proteins","title":"Index"},{"location":"examples/#this-is-the-tutorials-folder-here-you-can-find-a-representation-of-almost-all-the-types-of-calculations-that-you-can-perform-with-gmx_mmpbsa-although-each-tutorial-focuses-on-specific-examples-you-can-use-gmx_mmpbsa-on-systems-that-combine-a-number-of-characteristics-ie-metalloproteinligand-complex-protein-dna-ligand-etc","text":"Analysis MM/3D-RISM Alanine scanning Decomposition analysis Multiple Trajectory method (Protein-Ligand) Stability calculations Entropy Interaction Entropy calculations nmode Entropy calculations Systems Protein-protein binding free energy calculations Single Trajectory method (Protein-Ligand) Protein-DNA binding free energy calculations Metalloprotein-peptide binding free energy calculations Protein-DNA-RNA-Ions-Ligand binding free energy calculations Protein-glycan binding free energy calculations MMPBSA with membrane proteins","title":"This is the tutorials folder. Here you can find a representation of almost all the types of calculations that you can perform with gmx_MMPBSA. Although each tutorial focuses on specific examples, you can use gmx_MMPBSA on systems that combine a number of characteristics (i.e. metalloprotein:ligand complex, Protein-DNA-ligand, etc.)"},{"location":"examples/3D-RISM/","text":"Protein-protein binding free energy calculations with MM/3D-RISM \u00b6 Requirements \u00b6 In its simplest version, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for MM/3D-RISM This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, / &rism polardecomp=0, thermo=\"gf\" / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. Note Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the MM/3D-RISM calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"3D-RISM"},{"location":"examples/3D-RISM/#protein-protein-binding-free-energy-calculations-with-mm3d-rism","text":"","title":"Protein-protein binding free energy calculations with MM/3D-RISM"},{"location":"examples/3D-RISM/#requirements","text":"In its simplest version, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/3D-RISM/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Sample input file for MM/3D-RISM This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, / &rism polardecomp=0, thermo=\"gf\" / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/3D-RISM/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. Note Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the MM/3D-RISM calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Alanine_scanning/","text":"Protein-DNA binding free energy calculations. Alanine scanning \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb) -- make sure chain labels are included An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 12 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Sample input file for Alanine scanning This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / &alanine_scanning mutant='ALA' mutant_res='B:12' / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is DNA) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 12 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation for both the wild-type and the mutant system. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\". How to define properly which residue is going to be mutated? \u00b6 The generated PDB files must keep the original numbering, so selection based on residue number is reliable. However, the chain id can vary depending on several factors. If you use the reference structure ( -cr flag), then you don't have to worry about any changes. The selection will be based on this structure. On the other hand, if this reference structure is omitted, then it will depend on: The complex structure file format The * .gro format does not contain information related to chains. GROMACS version We have seen that the GROMACS 20xx.x versions, trjconv omit the chain IDs. Options used to generate the topology in GROMACS (referring to the -merge option) If you use the -merge option then GROMACS will merge the chains into one. * The option assign_chainID This option defines when chain IDs are assigned. For the first and second option it must be assign_chainID = 1 or 2. For the 3 rd it must be assign_chainID = 2. See the description here. Tip In any of these cases, you must verify that the selection is correct. You can see the structure of the Complex ( _GMXMMPBSA_COM.pdb ), Receptor ( _GMXMMPBSA_REC_FIXED.pdb ), and ligand ( _GMXMMPBSA_LIG_FIXED.pdb ) respectively.","title":"Alanine scanning"},{"location":"examples/Alanine_scanning/#protein-dna-binding-free-energy-calculations-alanine-scanning","text":"","title":"Protein-DNA binding free energy calculations. Alanine scanning"},{"location":"examples/Alanine_scanning/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb) -- make sure chain labels are included An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Alanine_scanning/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 12 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Sample input file for Alanine scanning This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / &alanine_scanning mutant='ALA' mutant_res='B:12' / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Alanine_scanning/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is DNA) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 12 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation for both the wild-type and the mutant system. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Alanine_scanning/#how-to-define-properly-which-residue-is-going-to-be-mutated","text":"The generated PDB files must keep the original numbering, so selection based on residue number is reliable. However, the chain id can vary depending on several factors. If you use the reference structure ( -cr flag), then you don't have to worry about any changes. The selection will be based on this structure. On the other hand, if this reference structure is omitted, then it will depend on: The complex structure file format The * .gro format does not contain information related to chains. GROMACS version We have seen that the GROMACS 20xx.x versions, trjconv omit the chain IDs. Options used to generate the topology in GROMACS (referring to the -merge option) If you use the -merge option then GROMACS will merge the chains into one. * The option assign_chainID This option defines when chain IDs are assigned. For the first and second option it must be assign_chainID = 1 or 2. For the 3 rd it must be assign_chainID = 2. See the description here. Tip In any of these cases, you must verify that the selection is correct. You can see the structure of the Complex ( _GMXMMPBSA_COM.pdb ), Receptor ( _GMXMMPBSA_REC_FIXED.pdb ), and ligand ( _GMXMMPBSA_LIG_FIXED.pdb ) respectively.","title":"How to define properly which residue is going to be mutated?"},{"location":"examples/Decomposition_analysis/","text":"Decomposition analysis \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. -- Antechamber output *.mol2 is recommended See a detailed list of all the flags in gmx_MMPBSA command line here That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 Sample input file with decomposition analysis This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, interval=1, / &gb igb=5, saltcon=0.150, / Make sure to include at least one residue from both the receptor and ligand in the print_res mask of the &decomp section. http://archive.ambermd.org/201308/0075.html &decomp idecomp=2, dec_verbose=3, print_res=\"within 4\" # or # #print_res=\"40,41,44,47,78,81,82,85,88,115,118,122,215,218,219,220,232,241\" / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms ( idecomp=2 ) is going to be performed and residues within 4A of the ligand will be printed in the output file. Of note, you can define the residues that are going to be printed in the output file in two different ways: print_res=\"within 4\" -- print all the residues within 4A of the ligand print_res=\"40,41,44,47,78,81,82,85,88,115,118,122,215,218,219,220,232,241\" -- print those residues in the output file Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation as well as the decomposition analysis. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\". Besides, a *.pdb file with per-residue energies in the b-factor column, can be saved by clicking \"File\" in the upper left corner and then \"Energy to bfactor\". This way, the contribution energy of every residue with its structure can be visualized in a molecular visualization program. Follow these tutorials for coloring residues in a *.pdb file according to their contributions: PyMOL UCSF-Chimera VMD","title":"Decomposition analysis"},{"location":"examples/Decomposition_analysis/#decomposition-analysis","text":"","title":"Decomposition analysis"},{"location":"examples/Decomposition_analysis/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. -- Antechamber output *.mol2 is recommended See a detailed list of all the flags in gmx_MMPBSA command line here That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 Sample input file with decomposition analysis This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, interval=1, / &gb igb=5, saltcon=0.150, / Make sure to include at least one residue from both the receptor and ligand in the print_res mask of the &decomp section. http://archive.ambermd.org/201308/0075.html &decomp idecomp=2, dec_verbose=3, print_res=\"within 4\" # or # #print_res=\"40,41,44,47,78,81,82,85,88,115,118,122,215,218,219,220,232,241\" / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Requirements"},{"location":"examples/Decomposition_analysis/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms ( idecomp=2 ) is going to be performed and residues within 4A of the ligand will be printed in the output file. Of note, you can define the residues that are going to be printed in the output file in two different ways: print_res=\"within 4\" -- print all the residues within 4A of the ligand print_res=\"40,41,44,47,78,81,82,85,88,115,118,122,215,218,219,220,232,241\" -- print those residues in the output file Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation as well as the decomposition analysis. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\". Besides, a *.pdb file with per-residue energies in the b-factor column, can be saved by clicking \"File\" in the upper left corner and then \"Energy to bfactor\". This way, the contribution energy of every residue with its structure can be visualized in a molecular visualization program. Follow these tutorials for coloring residues in a *.pdb file according to their contributions: PyMOL UCSF-Chimera VMD","title":"Considerations"},{"location":"examples/Entropy_calculations/Interaction_Entropy/","text":"Entropy calculations \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 Sample input file for entropy calculations This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general # startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", #entropy variable control whether to perform a quasi-harmonic entropy (QH) # approximation or the Interaction Entropy approximation # (https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) entropy=2, entropy_seg=25, entropy_temp=298 / &gb igb=2, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. Interaction Entropy (IE) will be calculated and the average for the last quartile ( entropy_seg=25 ) of the total number of frames will be reported. Of note, two other methods ( QH and nmode ) can be used for estimating the entropic contribution, though they are way more expensive in computation as compared with IE method. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Interaction Entropy"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#entropy-calculations","text":"","title":"Entropy calculations"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 Sample input file for entropy calculations This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general # startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", #entropy variable control whether to perform a quasi-harmonic entropy (QH) # approximation or the Interaction Entropy approximation # (https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) entropy=2, entropy_seg=25, entropy_temp=298 / &gb igb=2, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. Interaction Entropy (IE) will be calculated and the average for the last quartile ( entropy_seg=25 ) of the total number of frames will be reported. Of note, two other methods ( QH and nmode ) can be used for estimating the entropic contribution, though they are way more expensive in computation as compared with IE method. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Entropy_calculations/nmode/","text":"Entropy calculations \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 Sample input file for entropy calculations This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general # startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\" / &gb igb=2, saltcon=0.150, / Note that nmode will use only a fraction of the no. of frames selected in &general variable (21-5/1=16 in this case). This way, nmode will only process 2 frames (15th and 16th frames) #note also that some parameters have been changed to perform the calculation faster (maxcyc=5, drms=100). The typical values for these parameters are (maxcyc=50000, drms=0.0001) &nmode nmstartframe=15, nmendframe=16, nminterval=1, maxcyc=5, drms=100, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. nmode will be used for estimating the entropic contribution, though it's way more expensive in computation as compared with IE method. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"nmode Entropy"},{"location":"examples/Entropy_calculations/nmode/#entropy-calculations","text":"","title":"Entropy calculations"},{"location":"examples/Entropy_calculations/nmode/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Entropy_calculations/nmode/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 Sample input file for entropy calculations This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general # startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\" / &gb igb=2, saltcon=0.150, / Note that nmode will use only a fraction of the no. of frames selected in &general variable (21-5/1=16 in this case). This way, nmode will only process 2 frames (15th and 16th frames) #note also that some parameters have been changed to perform the calculation faster (maxcyc=5, drms=100). The typical values for these parameters are (maxcyc=50000, drms=0.0001) &nmode nmstartframe=15, nmendframe=16, nminterval=1, maxcyc=5, drms=100, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Entropy_calculations/nmode/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa. in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. nmode will be used for estimating the entropic contribution, though it's way more expensive in computation as compared with IE method. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Metalloprotein_peptide/","text":"Metalloprotein-peptide binding free energy calculations \u00b6 Requirements \u00b6 In its simplest version, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 20 21 -ct com_traj.pdb where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general endframe=5, verbose=2, protein_forcefield=\"oldff/leaprc.ff99SB\", ions_parameters=1, / &gb igb=2, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 20 21 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 4 frames are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. In this case, Li/Merz ion parameters (12-6 normal usage set) for Zn ions were used. Check Amber manual for more info on ion parameters. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Metalloprotein-peptide"},{"location":"examples/Metalloprotein_peptide/#metalloprotein-peptide-binding-free-energy-calculations","text":"","title":"Metalloprotein-peptide binding free energy calculations"},{"location":"examples/Metalloprotein_peptide/#requirements","text":"In its simplest version, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Metalloprotein_peptide/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 20 21 -ct com_traj.pdb where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general endframe=5, verbose=2, protein_forcefield=\"oldff/leaprc.ff99SB\", ions_parameters=1, / &gb igb=2, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Metalloprotein_peptide/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 20 21 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 4 frames are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. In this case, Li/Merz ion parameters (12-6 normal usage set) for Zn ions were used. Check Amber manual for more info on ion parameters. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Protein_DNA/","text":"Protein-DNA binding free energy calculations \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 12 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is DNA) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 12 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Protein-DNA"},{"location":"examples/Protein_DNA/#protein-dna-binding-free-energy-calculations","text":"","title":"Protein-DNA binding free energy calculations"},{"location":"examples/Protein_DNA/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_DNA/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 12 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", PBRadii=4 / &gb igb=8, saltcon=0.150, intdiel=10 / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_DNA/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is DNA) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 12 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/","text":"Protein-DNA_RNA_ION-Ligand binding free energy calculations \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. -- Antechamber output *.mol2 is recommended See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general verbose=2, protein_forcefield=\"oldff/leaprc.ff99SBildn\", ligand_forcefield=\"leaprc.gaff\", PBRadii=4, ions_parameters=1 / &gb igb=8, saltcon=0.150, intdiel=10 / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor (Protein+DNA+RNA+Ions) and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 33 14 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology.The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. In this case, Li/Merz ion parameters (12-6 normal usage set) for Mg ions were used. Check Amber manual for more info on ion parameters. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Protein-DNA-RNA-Ions-Ligand"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#protein-dna_rna_ion-ligand-binding-free-energy-calculations","text":"","title":"Protein-DNA_RNA_ION-Ligand binding free energy calculations"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. -- Antechamber output *.mol2 is recommended See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general verbose=2, protein_forcefield=\"oldff/leaprc.ff99SBildn\", ligand_forcefield=\"leaprc.gaff\", PBRadii=4, ions_parameters=1 / &gb igb=8, saltcon=0.150, intdiel=10 / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor (Protein+DNA+RNA+Ions) and ligand amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 33 14 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology.The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii ( PBRadii=4 ) will be used as recommended for GB-Neck2 solvation model. Also a high dielectric constant intdiel=10 will be used because of the high number of charged residues at the interface. In this case, Li/Merz ion parameters (12-6 normal usage set) for Mg ions were used. Check Amber manual for more info on ion parameters. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Protein_glycan/","text":"Protein-glycan binding free energy calculations \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 26 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=20, verbose=2, protein_forcefield=\"oldff/leaprc.ff99SB\", ligand_forcefield=\"leaprc.GLYCAM_06h-1\" / &gb igb=5, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and glycan structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 26 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, there is no need to define a .mol2 for the glycan . 12 frames are going to be used when performing the the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Of note, the recommended GLYCAM force fields are: * \"leaprc.GLYCAM_06j-1\" (Compatible with amber12SB and later), \"leaprc.GLYCAM_06EPb\" (Compatible with amber12SB and later), and \"leaprc.GLYCAM_06h-1\" (Compatible with amber99SB and earlier. It is included in gmx_MMPBSA package. If it is selected, it will be copied to $AMBERHOME/dat/x) Check Amber manual for more info on GLYCAM force fields. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Protein-glycan"},{"location":"examples/Protein_glycan/#protein-glycan-binding-free-energy-calculations","text":"","title":"Protein-glycan binding free energy calculations"},{"location":"examples/Protein_glycan/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_glycan/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 26 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=20, verbose=2, protein_forcefield=\"oldff/leaprc.ff99SB\", ligand_forcefield=\"leaprc.GLYCAM_06h-1\" / &gb igb=5, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_glycan/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and glycan structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 26 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, there is no need to define a .mol2 for the glycan . 12 frames are going to be used when performing the the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Of note, the recommended GLYCAM force fields are: * \"leaprc.GLYCAM_06j-1\" (Compatible with amber12SB and later), \"leaprc.GLYCAM_06EPb\" (Compatible with amber12SB and later), and \"leaprc.GLYCAM_06h-1\" (Compatible with amber99SB and earlier. It is included in gmx_MMPBSA package. If it is selected, it will be copied to $AMBERHOME/dat/x) Check Amber manual for more info on GLYCAM force fields. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Protein_ligand/MT/","text":"Protein-ligand binding free energy calculations (Multiple Trajectory method) \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) for each one of the components ( i.e. complex, receptor and ligand) An index file (*.ndx) for each one of the components ( i.e. complex, receptor and ligand) Group numbers in the index files Trajectory files (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc -- for each one of the components ( i.e. complex, receptor and ligand) A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. -- Antechamber output *.mol2 is recommended See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc \\ -rs rec.pdb -ri rec_index.ndx -rg 1 -rt rec_traj.pdb -lm ligand.mol2 \\ -ls lig.pdb -li lig_index.ndx -lg 2 -lt lig_traj.pdb where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=20, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", ligand_forcefield=\"leaprc.gaff\" / &gb igb=5, saltcon=0.15, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a multiple trajectory (MT) approximation is followed, which means the receptor and ligand structures and trajectories are needed. For the complex, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. For the receptor, a MD Structure+mass(db) file ( rec.pdb ), an index file ( rec_index.ndx ), a trajectory file ( rec_traj.pdb ), and the receptor group number in the rec_index file ( 1 ) are needed. For the ligand, a ligand .mol2 file is needed for generating the ligand topology. Besides, a MD Structure+mass(db) file ( lig.pdb ), an index file ( lig_index.ndx ), a trajectory file ( lig_traj.pdb ), and ligand group number in the lig_index file ( 2 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Protein-Ligand (MT)"},{"location":"examples/Protein_ligand/MT/#protein-ligand-binding-free-energy-calculations-multiple-trajectory-method","text":"","title":"Protein-ligand binding free energy calculations (Multiple Trajectory method)"},{"location":"examples/Protein_ligand/MT/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) for each one of the components ( i.e. complex, receptor and ligand) An index file (*.ndx) for each one of the components ( i.e. complex, receptor and ligand) Group numbers in the index files Trajectory files (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc -- for each one of the components ( i.e. complex, receptor and ligand) A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. -- Antechamber output *.mol2 is recommended See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_ligand/MT/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc \\ -rs rec.pdb -ri rec_index.ndx -rg 1 -rt rec_traj.pdb -lm ligand.mol2 \\ -ls lig.pdb -li lig_index.ndx -lg 2 -lt lig_traj.pdb where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=20, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", ligand_forcefield=\"leaprc.gaff\" / &gb igb=5, saltcon=0.15, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_ligand/MT/#considerations","text":"In this case, a multiple trajectory (MT) approximation is followed, which means the receptor and ligand structures and trajectories are needed. For the complex, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. For the receptor, a MD Structure+mass(db) file ( rec.pdb ), an index file ( rec_index.ndx ), a trajectory file ( rec_traj.pdb ), and the receptor group number in the rec_index file ( 1 ) are needed. For the ligand, a ligand .mol2 file is needed for generating the ligand topology. Besides, a MD Structure+mass(db) file ( lig.pdb ), an index file ( lig_index.ndx ), a trajectory file ( lig_traj.pdb ), and ligand group number in the lig_index file ( 2 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Protein_ligand/ST/","text":"Protein-ligand binding free energy calculations (Single Trajectory method) \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. -- Antechamber output *.mol2 is recommended See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=20, verbose=2, protein_forcefield=\"oldff/leaprc.ff99SB\", ligand_forcefield=\"leaprc.gaff\" / &gb igb=5, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Protein-Ligand (ST)"},{"location":"examples/Protein_ligand/ST/#protein-ligand-binding-free-energy-calculations-single-trajectory-method","text":"","title":"Protein-ligand binding free energy calculations (Single Trajectory method)"},{"location":"examples/Protein_ligand/ST/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. -- Antechamber output *.mol2 is recommended See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_ligand/ST/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=20, verbose=2, protein_forcefield=\"oldff/leaprc.ff99SB\", ligand_forcefield=\"leaprc.gaff\" / &gb igb=5, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_ligand/ST/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Protein_ligand_CHARMMff/","text":"Protein-ligand binding free energy calculations (Single Trajectory method) with CHARMMff files \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A topology file (*.top) -- take into account that *.itp files belonging to the topology file should be also present in the folder Warning The topology file is always required when working with CHARMM force field See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for PB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=1, endframe=11, verbose=2, / &pb # radiopt=0 is recommended which means using radii from the prmtop file # for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0 / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. PB model is recommended when working with CHARMMff files. Please, check this thread and proceed cautiously. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Protein-Ligand (ST)"},{"location":"examples/Protein_ligand_CHARMMff/#protein-ligand-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","text":"","title":"Protein-ligand binding free energy calculations (Single Trajectory method) with CHARMMff files"},{"location":"examples/Protein_ligand_CHARMMff/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A topology file (*.top) -- take into account that *.itp files belonging to the topology file should be also present in the folder Warning The topology file is always required when working with CHARMM force field See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_ligand_CHARMMff/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Sample input file for PB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=1, endframe=11, verbose=2, / &pb # radiopt=0 is recommended which means using radii from the prmtop file # for both the PB calculation and for the NP calculation istrng=0.15, fillratio=4.0, radiopt=0 / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_ligand_CHARMMff/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. PB model is recommended when working with CHARMMff files. Please, check this thread and proceed cautiously. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Protein_membrane/","text":"MMPBSA with membrane proteins \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 1 13 -ct com_traj.pdb -lm ligand.mol2 where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Sample input file for MMPBSA with membrane proteins This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=1, endframe=4, interval=1, debug_printlevel=2, use_sander=1, / &pb radiopt=0, indi=20.0, istrng=0.150, fillratio=1.25, ipb=1, nfocus=1, bcopt=10, eneopt=1, cutfd=7.0, cutnb=99.0, npbverb=1, solvopt=2, inp=2, memopt=1, emem=7.0, mctrdz=-10.383, mthick=36.086, poretype=1, maxarcdot=15000 / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.pdb ), an index file ( index.ndx ), a trajectory file ( com_traj.pdb ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. Of note, special parameters for MMPBSA with membrane proteins have been included. See more here . Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the PB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Membrane proteins"},{"location":"examples/Protein_membrane/#mmpbsa-with-membrane-proteins","text":"","title":"MMPBSA with membrane proteins"},{"location":"examples/Protein_membrane/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. A *.mol2 file of the unbound ligand used to parametrize ligand for GROMACS. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_membrane/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 1 13 -ct com_traj.pdb -lm ligand.mol2 where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Sample input file for MMPBSA with membrane proteins This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=1, endframe=4, interval=1, debug_printlevel=2, use_sander=1, / &pb radiopt=0, indi=20.0, istrng=0.150, fillratio=1.25, ipb=1, nfocus=1, bcopt=10, eneopt=1, cutfd=7.0, cutnb=99.0, npbverb=1, solvopt=2, inp=2, memopt=1, emem=7.0, mctrdz=-10.383, mthick=36.086, poretype=1, maxarcdot=15000 / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_membrane/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.pdb ), an index file ( index.ndx ), a trajectory file ( com_traj.pdb ), and both the receptor and ligand group numbers in the index file ( 1 13 ) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. Of note, special parameters for MMPBSA with membrane proteins have been included. See more here . Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the PB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Protein_protein/","text":"Protein-protein binding free energy calculations \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", / &gb igb=2, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Protein-protein"},{"location":"examples/Protein_protein/#protein-protein-binding-free-energy-calculations","text":"","title":"Protein-protein binding free energy calculations"},{"location":"examples/Protein_protein/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Protein_protein/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", / &gb igb=2, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Protein_protein/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. Once the calculation is done, the GUI app ( gmx_MMPBSA_ana ) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"},{"location":"examples/Stability/","text":"Stability calculations \u00b6 Requirements \u00b6 In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here Command-line \u00b6 That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -s -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", / &gb igb=2, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples Considerations \u00b6 In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. \"Stability\" calculation will be performed, and you will get statistics based on only a single system (complex). Any additional receptor or ligand information given will be ignored. Once the calculation is done, the GUI app (gmx_MMPBSA_ana) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Stability calculations"},{"location":"examples/Stability/#stability-calculations","text":"","title":"Stability calculations"},{"location":"examples/Stability/#requirements","text":"In this case, gmx_MMPBSA requires: An input parameters file (*.in) -- input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file (*.tpr, *.pdb, *.gro) An index file (*.ndx) -- *.ndx file containing the receptor and ligand in separated groups Receptor and ligand group numbers in the index file A trajectory file (*.xtc, *.pdb, *.gro, *.trr) -- final GROMACS MD trajectory, fitted and with no pbc. See a detailed list of all the flags in gmx_MMPBSA command line here","title":"Requirements"},{"location":"examples/Stability/#command-line","text":"That being said, once you are in the folder containing all files, the command-line will be as follows: gmx_MMPBSA -O -i mmpbsa.in -s -cs com.tpr -ci index.ndx -cg 19 20 -ct com_traj.xtc where the mmpbsa.in input file, is a text file containing the following lines: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Sample input file for GB calculation This input file is mean to show only that gmx_MMPBSA works. Althought, we tried to used the input files as recommended in the Amber manual, some parameters have been changed to perform more expensive calculations. Feel free to change the parameters according to what is better for your system. &general startframe=5, endframe=21, verbose=2, interval=1, protein_forcefield=\"oldff/leaprc.ff99SB\", / &gb igb=2, saltcon=0.150, / See a detailed list of all the options in gmx_MMPBSA input file here as well as several examples","title":"Command-line"},{"location":"examples/Stability/#considerations","text":"In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To do so, a MD Structure+mass(db) file ( com.tpr ), an index file ( index.ndx ), a trajectory file ( com_traj.xtc ), and both the receptor and ligand group numbers in the index file ( 19 20 ) are needed. The mmpbsa.in input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 16 frames (endframe-startframe)/interval = (21-5)/1 = 16 are going to be used when performing the the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M. \"Stability\" calculation will be performed, and you will get statistics based on only a single system (complex). Any additional receptor or ligand information given will be ignored. Once the calculation is done, the GUI app (gmx_MMPBSA_ana) will show up. In this app, you can visualize the results for the GB calculation. The results can be saved as *.csv file by clicking \"File\" in the upper left corner and then \"Export GB/PB energy (csv)\".","title":"Considerations"}]}